{"id":"ts/Logger.ts","dependencies":[{"name":"C:\\Programming\\projects\\typescript\\ts-test\\tsconfig.json","includedInParent":true,"mtime":1557682756384},{"name":"C:\\Programming\\projects\\typescript\\ts-test\\package.json","includedInParent":true,"mtime":1557611820048}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Logger =\n/*#__PURE__*/\nfunction () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n  }\n\n  _createClass(Logger, [{\n    key: \"info\",\n    value: function info(msg) {\n      console.log(msg);\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.Logger = Logger;\n\nvar AdvancedLogger =\n/*#__PURE__*/\nfunction () {\n  function AdvancedLogger() {\n    _classCallCheck(this, AdvancedLogger);\n  }\n\n  _createClass(AdvancedLogger, [{\n    key: \"info\",\n    value: function info(msg) {\n      console.log(\"\".concat(Date.now(), \" > \").concat(msg));\n    }\n  }]);\n\n  return AdvancedLogger;\n}();\n\nexports.AdvancedLogger = AdvancedLogger;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/Logger.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":13,"column":4}},{"source":"ts/Logger.ts","name":null,"original":{"line":10,"column":7},"generated":{"line":22,"column":25}},{"source":"ts/Logger.ts","name":null,"original":{"line":10,"column":18},"generated":{"line":22,"column":30}},{"source":"ts/Logger.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":23,"column":0}},{"source":"ts/Logger.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":23,"column":6}},{"source":"ts/Logger.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":23,"column":13}},{"source":"ts/Logger.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":23,"column":14}},{"source":"ts/Logger.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":23,"column":17}},{"source":"ts/Logger.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":23,"column":18}},{"source":"ts/Logger.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":23,"column":21}},{"source":"ts/Logger.ts","name":null,"original":{"line":12,"column":3},"generated":{"line":24,"column":0}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":30,"column":0}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":30,"column":7}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":30,"column":8}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":30,"column":14}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":30,"column":17}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":30,"column":23}},{"source":"ts/Logger.ts","name":null,"original":{"line":15,"column":6},"generated":{"line":32,"column":4}},{"source":"ts/Logger.ts","name":null,"original":{"line":18,"column":7},"generated":{"line":41,"column":25}},{"source":"ts/Logger.ts","name":null,"original":{"line":18,"column":18},"generated":{"line":41,"column":30}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":42,"column":0}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":42,"column":6}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":42,"column":13}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":12},"generated":{"line":42,"column":14}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":42,"column":17}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":19},"generated":{"line":42,"column":28}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":42,"column":32}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":42,"column":33}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":19},"generated":{"line":42,"column":36}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":42,"column":38}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":35},"generated":{"line":42,"column":54}},{"source":"ts/Logger.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":42,"column":57}},{"source":"ts/Logger.ts","name":null,"original":{"line":20,"column":3},"generated":{"line":43,"column":0}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":49,"column":0}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":49,"column":7}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":49,"column":8}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":49,"column":22}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":49,"column":25}},{"source":"ts/Logger.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":49,"column":39}}],"sources":{"ts/Logger.ts":"interface ILogger {\r\n  tag: 'logger';\r\n  info: (msg: string) => void;\r\n\r\n}\r\n\r\nclass Logger implements ILogger {\r\n  public tag!: 'logger';\r\n\r\n  info(msg: string) {\r\n    console.log(msg);\r\n  }\r\n}\r\n\r\nclass AdvancedLogger implements ILogger {\r\n  public tag!: 'logger';\r\n\r\n  info(msg: string) {\r\n    console.log(`${Date.now()} > ${msg}`);\r\n  }\r\n}\r\n\r\nexport { ILogger, Logger, AdvancedLogger };"},"lineCount":null}},"error":null,"hash":"ba0c377f9b2dae45bf46e36c04c3197b","cacheData":{"env":{}}}