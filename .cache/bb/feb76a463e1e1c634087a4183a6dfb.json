{"id":"ts/CommandManager.ts","dependencies":[{"name":"C:\\Programming\\projects\\typescript\\ts-test\\tsconfig.json","includedInParent":true,"mtime":1557682756384},{"name":"C:\\Programming\\projects\\typescript\\ts-test\\package.json","includedInParent":true,"mtime":1557611820048},{"name":"./CommandCollection","loc":{"line":6,"column":52},"parent":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\CommandManager.ts","resolved":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\CommandCollection.ts"}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CommandCollection_1 = __importDefault(require(\"./CommandCollection\"));\n\nvar CommandManager =\n/*#__PURE__*/\nfunction () {\n  function CommandManager() {\n    _classCallCheck(this, CommandManager);\n\n    this._commands = new CommandCollection_1.default();\n  }\n\n  _createClass(CommandManager, [{\n    key: \"register\",\n    value: function register(commands) {\n      this._commands.add(commands);\n    }\n  }, {\n    key: \"tryExecute\",\n    value: function tryExecute(input) {\n      var cmd = this._commands.get(input.command);\n\n      return cmd !== undefined ? cmd.exec(input.arguments, input.flags) : Promise.resolve(false);\n    }\n  }]);\n\n  return CommandManager;\n}();\n\nexports.default = CommandManager;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":4}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":23}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":26}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":41}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":42}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":49}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":50}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":71}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":72}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":19,"column":73}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":21,"column":4}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":24,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":24,"column":28}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":25,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":27,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":27,"column":9}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":27,"column":18}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":22},"generated":{"line":27,"column":21}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":26},"generated":{"line":27,"column":25}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":26},"generated":{"line":27,"column":44}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":26},"generated":{"line":27,"column":45}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":22},"generated":{"line":27,"column":52}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":6,"column":10},"generated":{"line":27,"column":54}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":18,"column":1},"generated":{"line":28,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":8,"column":11},"generated":{"line":32,"column":29}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":8,"column":38},"generated":{"line":32,"column":39}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":33,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":33,"column":11}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":33,"column":20}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":9,"column":19},"generated":{"line":33,"column":21}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":33,"column":24}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":9,"column":23},"generated":{"line":33,"column":25}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":33,"column":33}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":10,"column":3},"generated":{"line":34,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":37,"column":31}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":12,"column":31},"generated":{"line":37,"column":38}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":38,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":10},"generated":{"line":38,"column":10}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":38,"column":13}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":38,"column":16}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":21},"generated":{"line":38,"column":21}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":38,"column":30}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":31},"generated":{"line":38,"column":31}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":38,"column":34}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":35},"generated":{"line":38,"column":35}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":40},"generated":{"line":38,"column":40}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":41},"generated":{"line":38,"column":41}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":38,"column":48}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":38,"column":49}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":40,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":40,"column":13}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":40,"column":16}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":14,"column":20},"generated":{"line":40,"column":21}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":14,"column":11},"generated":{"line":40,"column":30}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":40,"column":33}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":11},"generated":{"line":40,"column":36}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":12},"generated":{"line":40,"column":37}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":40,"column":41}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":17},"generated":{"line":40,"column":42}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":22},"generated":{"line":40,"column":47}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":23},"generated":{"line":40,"column":48}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":40,"column":57}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":34},"generated":{"line":40,"column":59}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":39},"generated":{"line":40,"column":64}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":40},"generated":{"line":40,"column":65}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":40,"column":70}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":14,"column":11},"generated":{"line":40,"column":71}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":40,"column":74}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":40,"column":81}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":16,"column":16},"generated":{"line":40,"column":82}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":40,"column":89}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":16,"column":33},"generated":{"line":40,"column":90}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":40,"column":95}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":40,"column":96}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":17,"column":3},"generated":{"line":41,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":0}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":7}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":8}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":15}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":18}},{"source":"ts/CommandManager.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":47,"column":32}}],"sources":{"ts/CommandManager.ts":"import CommandCollection from \"./CommandCollection\";\r\nimport ParsedInput from \"./ParsedInput\";\r\n\r\nexport default class CommandManager {\r\n\r\n  private _commands = new CommandCollection();\r\n\r\n  register(commands: CommandCollection) {\r\n    this._commands.add(commands);\r\n  }\r\n\r\n  tryExecute(input: ParsedInput) : Promise<boolean> {\r\n    const cmd = this._commands.get(input.command);\r\n    return (cmd !== undefined)\r\n      ? cmd.exec(input.arguments, input.flags)\r\n      : Promise.resolve<boolean>(false);\r\n  }\r\n}"},"lineCount":null}},"error":null,"hash":"c485d529dfc3d51ee6620c63c10458d8","cacheData":{"env":{}}}