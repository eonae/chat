{"id":"ts/apps/shell/CommandShell.ts","dependencies":[{"name":"C:\\Programming\\projects\\typescript\\ts-test\\tsconfig.json","includedInParent":true,"mtime":1557682756384},{"name":"C:\\Programming\\projects\\typescript\\ts-test\\package.json","includedInParent":true,"mtime":1557611820048},{"name":"./ParsedInput","loc":{"line":6,"column":46},"parent":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\apps\\shell\\CommandShell.ts","resolved":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\apps\\shell\\ParsedInput.ts"},{"name":"../../lib/Logger","loc":{"line":7,"column":25},"parent":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\apps\\shell\\CommandShell.ts","resolved":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\lib\\Logger.ts"},{"name":"../../lib/base/BaseIOEntity","loc":{"line":8,"column":47},"parent":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\apps\\shell\\CommandShell.ts","resolved":"C:\\Programming\\projects\\typescript\\ts-test\\src\\ts\\lib\\base\\BaseIOEntity.ts"}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ParsedInput_1 = __importDefault(require(\"./ParsedInput\"));\n\nvar Logger_1 = require(\"../../lib/Logger\");\n\nvar BaseIOEntity_1 = __importDefault(require(\"../../lib/base/BaseIOEntity\"));\n\nvar CommandShell =\n/*#__PURE__*/\nfunction (_BaseIOEntity_1$defau) {\n  _inherits(CommandShell, _BaseIOEntity_1$defau);\n\n  function CommandShell(commands) {\n    var _this;\n\n    _classCallCheck(this, CommandShell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommandShell).call(this, commands));\n    _this.logger = new Logger_1.Logger();\n    _this.reportErrors = _this.reportErrors.bind(_assertThisInitialized(_this));\n    _this.in = _this.in.bind(_assertThisInitialized(_this)); // Интересно, как в конструкторе абстрактного класса биндится абстрактный метод?\n\n    return _this;\n  }\n\n  _createClass(CommandShell, [{\n    key: \"use\",\n    value: function use(dependency) {\n      switch (dependency.tag) {\n        case 'logger':\n          this.logger = dependency;\n          break;\n      }\n\n      this.logger.info(\"new \".concat(dependency.tag, \" is set\"));\n    }\n  }, {\n    key: \"reportErrors\",\n    value: function reportErrors(output) {\n      if (output instanceof Error) {\n        this.emit('write', output.message);\n      }\n    }\n  }, {\n    key: \"in\",\n    value: function _in(input) {\n      var _this2 = this;\n\n      var parsedInput = ParsedInput_1.default.getFrom(input);\n      this.commandManager.tryExecute(parsedInput).then(this.reportErrors).then(function () {\n        if (!_this2._stopToken) {\n          _this2.emit('read', {});\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.emit('read', {});\n    }\n  }]);\n\n  return CommandShell;\n}(BaseIOEntity_1.default);\n\nexports.default = CommandShell;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":4}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":17}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":20}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":35}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":36}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":43}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":44}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":59}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":60}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":31,"column":61}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":4}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":12}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":15}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":22}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":23}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":41}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":33,"column":42}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":4}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":18}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":21}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":36}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":37}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":44}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":45}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":74}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":75}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":35,"column":76}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":21},"generated":{"line":37,"column":4}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":42,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":14},"generated":{"line":42,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":42,"column":32}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":43},"generated":{"line":42,"column":34}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":43},"generated":{"line":43,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":43},"generated":{"line":45,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":47,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":47,"column":86}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":47,"column":94}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":48,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":48,"column":10}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":48,"column":16}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":48,"column":19}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":48,"column":23}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":48,"column":31}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":32},"generated":{"line":48,"column":32}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":48,"column":38}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":48,"column":40}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":49,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":49,"column":10}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":49,"column":22}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":24},"generated":{"line":49,"column":25}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":29},"generated":{"line":49,"column":31}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":24},"generated":{"line":49,"column":43}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":42},"generated":{"line":49,"column":44}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":24},"generated":{"line":49,"column":48}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":49,"column":79}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":50,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":50,"column":10}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":50,"column":12}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":50,"column":15}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":19},"generated":{"line":50,"column":21}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":50,"column":23}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":22},"generated":{"line":50,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":14},"generated":{"line":50,"column":28}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":50,"column":59}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":43},"generated":{"line":50,"column":60}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":14,"column":34},"generated":{"line":50,"column":61}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":11,"column":43},"generated":{"line":52,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":15,"column":3},"generated":{"line":53,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":57,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":17,"column":32},"generated":{"line":57,"column":36}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":58,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":58,"column":14}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":58,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":18,"column":23},"generated":{"line":58,"column":25}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":58,"column":28}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":59,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":59,"column":13}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":59,"column":21}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":60,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":60,"column":15}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":60,"column":21}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":60,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":60,"column":34}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":61,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":62,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":64,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":9},"generated":{"line":64,"column":11}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":64,"column":17}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":16},"generated":{"line":64,"column":18}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":64,"column":22}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":28},"generated":{"line":64,"column":37}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":38},"generated":{"line":64,"column":47}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":39},"generated":{"line":64,"column":48}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":64,"column":51}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":24,"column":3},"generated":{"line":65,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":26,"column":23},"generated":{"line":68,"column":33}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":26,"column":34},"generated":{"line":68,"column":41}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":69,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":69,"column":10}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":27,"column":14},"generated":{"line":69,"column":16}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":27,"column":26},"generated":{"line":69,"column":28}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":69,"column":33}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":69,"column":35}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":70,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":70,"column":13}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":70,"column":17}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":16},"generated":{"line":70,"column":18}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":70,"column":25}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":25},"generated":{"line":70,"column":27}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":31},"generated":{"line":70,"column":33}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":32},"generated":{"line":70,"column":34}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":70,"column":41}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":71,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":30,"column":3},"generated":{"line":72,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":32,"column":12},"generated":{"line":75,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":32,"column":25},"generated":{"line":75,"column":31}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":32,"column":25},"generated":{"line":76,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":78,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":10},"generated":{"line":78,"column":10}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":21},"generated":{"line":78,"column":21}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":78,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":78,"column":37}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":78,"column":38}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":78,"column":45}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":36},"generated":{"line":78,"column":46}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":78,"column":53}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":44},"generated":{"line":78,"column":54}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":24},"generated":{"line":78,"column":59}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":33,"column":4},"generated":{"line":78,"column":60}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":79,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":9},"generated":{"line":79,"column":11}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":79,"column":25}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":79,"column":26}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":79,"column":36}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":35,"column":18},"generated":{"line":79,"column":37}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":79,"column":48}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":36,"column":7},"generated":{"line":79,"column":50}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":79,"column":54}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":36,"column":12},"generated":{"line":79,"column":55}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":36,"column":17},"generated":{"line":79,"column":60}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":79,"column":72}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":37,"column":7},"generated":{"line":79,"column":74}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":79,"column":78}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":37,"column":12},"generated":{"line":79,"column":79}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":37,"column":17},"generated":{"line":79,"column":91}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":80,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":38,"column":12},"generated":{"line":80,"column":12}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":80,"column":13}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":38,"column":17},"generated":{"line":80,"column":19}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":38,"column":18},"generated":{"line":80,"column":20}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":80,"column":30}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":38,"column":30},"generated":{"line":80,"column":32}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":81,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":81,"column":10}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":14},"generated":{"line":81,"column":16}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":15},"generated":{"line":81,"column":17}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":81,"column":21}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":20},"generated":{"line":81,"column":22}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":81,"column":28}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":28},"generated":{"line":81,"column":30}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":81,"column":32}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":40,"column":9},"generated":{"line":82,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":41,"column":7},"generated":{"line":83,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":83,"column":7}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":42,"column":3},"generated":{"line":84,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":44,"column":12},"generated":{"line":87,"column":26}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":88,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":88,"column":11}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":88,"column":15}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":45,"column":14},"generated":{"line":88,"column":16}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":88,"column":22}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":45,"column":22},"generated":{"line":88,"column":24}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":45,"column":4},"generated":{"line":88,"column":26}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":46,"column":3},"generated":{"line":89,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":42},"generated":{"line":93,"column":2}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":42},"generated":{"line":93,"column":16}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":42},"generated":{"line":93,"column":17}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":95,"column":0}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":95,"column":7}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":95,"column":8}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":95,"column":15}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":95,"column":18}},{"source":"ts/apps/shell/CommandShell.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":95,"column":30}}],"sources":{"ts/apps/shell/CommandShell.ts":"\r\nimport ParsedInput from './ParsedInput';\r\nimport { ILogger, Logger } from '../../lib/Logger';\r\nimport BaseIOEntity from '../../lib/base/BaseIOEntity';\r\nimport { CommandDefinition, BaseIOCallback } from '../../lib/base/types';\r\n\r\nexport default class CommandShell extends BaseIOEntity {\r\n\r\n  private logger: ILogger = new Logger();\r\n\r\n  constructor(commands: CommandDefinition[]) {\r\n    super(commands);\r\n    this.reportErrors = this.reportErrors.bind(this);\r\n    this.in = this.in.bind(this); // Интересно, как в конструкторе абстрактного класса биндится абстрактный метод?\r\n  }\r\n\r\n  public use(dependency: ILogger) {\r\n    switch (dependency.tag) {\r\n      case 'logger':\r\n        this.logger = dependency;\r\n        break;\r\n    }\r\n    this.logger.info(`new ${dependency.tag} is set`);\r\n  }\r\n\r\n  private reportErrors(output: any) : void{\r\n    if (output instanceof Error) {\r\n      this.emit('write', output.message);\r\n    }\r\n  }\r\n\r\n  public in(input: string): void {\r\n    const parsedInput = ParsedInput.getFrom(input);\r\n    this.commandManager\r\n      .tryExecute(parsedInput)\r\n      .then(this.reportErrors)\r\n      .then(() => {\r\n        if (!this._stopToken) {\r\n          this.emit('read', {});\r\n        }\r\n      });\r\n  }\r\n\r\n  public run(): void {\r\n    this.emit('read', {});\r\n  }\r\n}"},"lineCount":null}},"error":null,"hash":"cd027cbff51bff759c21b3a73d4629c7","cacheData":{"env":{}}}