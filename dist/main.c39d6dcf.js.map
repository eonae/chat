{"version":3,"sources":["ts/terminal/Command.ts","ts/terminal/CommandManager.ts","ts/terminal/ParsedInput.ts","ts/lib/Logger.ts","ts/terminal/Terminal.ts","ts/lib/EventEmitter.ts","ts/views/Line.ts","ts/views/InputLine.ts","ts/lib/InputSaver.ts","ts/views/TerminalView.ts","ts/terminal/http.ts","ts/terminal/Commands.ts","main.ts","../../../../../Users/Sergey/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../../Users/Sergey/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":"AaAA,ACAA,IDAIA,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,SDDSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,IAAAA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,AJFF,EIEEA,EJFI,KIEG,CAACE,MAAR,EJFkB,CIED,EJFI,CAAC,KAAD,EAAQ,EIEA,MJFR,CAAvB;AIGIH,AFLJ,ADCA,ADEA,IIEIA,AHJJ,ADEM,GEHN,CEKQ,AFLR,CEKSI,CHJT,GAAA,EGII,KHJJ,CCDA,ADCA,CCDA,CFGyB,GAAG,CAAE,ECF9B,CAAA,KDE4B,EAAY,mBAAZ,CAA5B;AGGE,ACAC,AJDU,GIDX,IJCW,CAAA,CGCJnB,GHDI,GAA0B,GGCrC;AACD,ADND,ADEa,ADGX,EAAA,EELF,EFKM,CCHO,CAAA,ADGL,MELR,AFIuC,ECF1B,CCFb,EDE6C,CAC3C,ICHF,CAAA,wBAAA,CAAA;AEMEgB,AHFE,ADEF,EIAAA,AHFE,ADEF,ICFM,EAAE,CGED,AJAA,CIACI,CJAC,GIAT,CHHA,CDCqC,CIEtBL,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDER,AFNF,ADII,ADEF,EIAAA,AHFE,ADEF,EENF,EEMM,CAACS,AJAA,CCFG,CEGDtB,AHDA,CCFG,ADGR,OIDF,CAAgBuB,AFNlB,GCOA,ADPA,GCOwB,EFHX,ECJb,CAAA,ADIY,CGEV,CAA6BT,AHFX,OGElB,EAAsCD,IAAI,CAACW,SFN7C,CAAA,CEME;ADEA,ACDD,AHFK,ADGA,ICHA,ADGA,GCHG,CAAC,ADGA,EAAE,ICHN,CAAW,GDEb,CCFE,CAAgB,KAAhB;AEIJ,ADRF,AXHA,AUQM,ADGA,IERN,APD8B,AGFT,ALMf,AFNN,ACAqB,AQWf,EGAA,KFHO,ADGA,ETXb,ASWe,CERf,AFQgB,ETXhB,CWGA,AFQe,CCHK,ADChB,CCDiB,IVRrB,CWGA,AXHA,CWGA,CDKa,EAAP,OVRN,CAAA,aWGA,CAAA;ACSI,ACDJ,AHFK,ADGC,GCRJ,CGOEC,AJCE,IAAI,EGAA,AHAE,IGAExB,ACDA,GAAG,EDCP,AHHN,EGGA,ACDJ;ADEG,ADRH,ADKI,ADGE,ECHF,CECF,CAEE,ADRE,AZ0BA,ACpBO,ASEP,IAAI,EAAE,CGADC,CDRG,ADKA,EEGV,AFHY,CCLC,CCQD,GDRK,UAAA,CAAA,IDKJ,GAAD,CCLC,CAAa,ADKN,ICLU,cAAA,CAAA,YAAJ,CAAiB,SAAjB,CAAb,EAA0C,UAAA,CAAA,QAA1C,CAAjB;ACSI,ACFJ,AFLA,APLA,AGFA,AGWM,ATXN,AQSI,GADK,CAH8B,IGS/BC,ADPA,CEKCuB,AFLA,EDII,CCJb,EDIgB,CEGD,AFHE,GEGC,ACFlB,CDEmB,ECFE,AHDR,CAAW,EEGAxB,ALdxB,CNAA,CGEA,CQY2B,CAACE,AFHf,KEGK,AFHiB,CAA7B,CEG6BC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,ATXF,AGFA,AGYK,ATZL,AQgBE,EAAA,CCZA,GGSIoB,MJGM,EAAE,EIHZ,EAAgB,gBJGH,GAAD,EAAQ;AGDlB,ACDA,Ad4BF,AC/BF,AUEI,ADKA,ECLA,MEEItB,AHGE,CCLC,EAAE,GDKG,CGHZ,CFXF,CEWe,AHGE,EVwBL,CUxBQ,CAAC,CVwBrB,EAAoC,GUxBnB,CTPnB,ASO8B,CAAX,CVwBjB,AUxBE,EVwBmD;Aa1BjD,ACDH,ATXO,AGFA,ARwC6C,AC/BvD,AUGI,ATZK,AEFT,AMmBI,ADnBJ,EEcI,EPdJ,AKAA,EEcQ,EAAE,ADKF,CLfE,AGFA,ANAD,AQiBA,CDnBT,GIgBaG,ARZH,AIJV,EDEU,AEiBN,CLfa,AHFR,CQkBH,CFlBuB,CNAF,CGEN,AGFX,AJFV,CFES,EWcc,ARZN,ADJjB,CSgBwBH,AHIX,CLhBH,GIJV,CAAA,CLAA,CSgB+B,AThB/B,CSgBgC,CAAD,CAAR,CAAjB,CJhBN,CAAA,QAAA,CAAA,CAAA,ELAA,CAAA;ASiBK,AR6BJ,AG3CS,AGCR,ATDO,AQkBD,CClBqC,EAc3C,GDIM,GFlBE,ANAD,GQkBK,EAAE,EFlBN,ENAD,CMAmB,AEiBf,CFjBgB,CAAnB,ANAqB,EAAtB;AWeN,ACDDsB,ANbQ,ARsC6C,AC7B7C,AUKN,ATdK,AEHT,AMqBQ,ADrBR,EKgBEA,AHCE,EPjBJ,AKAA,EEiBQ,ADIA,ECJE,CHdA,APSA,ACTD,EQkBI,CILD,CbJF,ASSK,CCLb,ATbO,CYaME,ANbL,ACHV,CRYiB,CCTU,AEH3B,AMqBmB,CFlBQ,ACH3B,CPGS,CMAC,APSW,AGZrB,EMqBe,CTTE,ASSQ,EILA,AbJf,CaIgB,OLhB1B,CAAA,CLAA,CAAA,EUgBsC,GLhBtC,CAAA,CLAA,CAAA,CMqBe,UDrBf,CAAA,CAAA,ELAA,CAAA,CAAA;AUiBI,AN8BH,APeA,AU5CG,ATYH,AQXY,ECDT,GDCE,CADF,EIDIC,AHCE,EAAE,CDKH,EINI,EJMA,CINGC,QAAQ,CAACC,AXTlB,CQUM,GAAD,ADKe,CPfT,AOeU,CCLR,MDKP,CAAuB,GINpB,CAA0B,EJM7B,MAAmC,CAAC,CAAxC,EACH,OAAO,KIPG,CAAZ;ADEF,AVVE,AH2Be,AWjBb,APlBN,AMwBQ,ADxBR,IEkBM,APlBN,AKAA,ENQI,AOgBI,CCNC,CAAC,CEAD,AbiBU,GajBjB,ATlBF,AMwBc,CPhBH,CAAC,AQUN,ADMU,CVWG,AWjBF,APlBjB,CKAA,CNQI,CAAY,AH2BoB,CWjB9B,ADKO,ADvBb,CTmCmB,CG3Bf,CCRJ,CAAA,WKAA,CAAA,GLAA,CAAA,GKAA,CAAA,mBAAA,CAAA,CAAA;AImBC,ACFG,AXRD,AHgCC,AWtBE,ADME,MAAA,GIRC,AdwBA,EWtBI,ADMA,EIRAC,AdwBT,AUhBW,CIRD,EdwBE,CcxBC,AJQE,CIRf,AHEgB,CXsBD,AWtBE,CGFDA,AdwBA,CcxBC,CJQN,CLrBH,CSaYH,AdwBpB,EWtBS,EAAP,CGFuB,CAACI,ITbC,ESa3B,EAAkCD,CAAC,EAAnC,EAAuC,ATbS,MKqBR,MAA7B,oBAA6C,cAAc,CAAC,IAAf,CAAoB,GAApB,CAA7C;AIPT,ATZF,ALoCA,AWtBC,ADGQ,GCRX,CPHI,AKFA,CCaA,IVmBG,CcxBCrB,ATZA,MSYM,AdwBZ,CcxBaJ,EdwBE,GAAG,CAAC,EKpCE,ESYf,CAAkBsB,ATZA,CLoCxB,IcxB6B,ATZA,CSYCG,CAAD,CAAL,CAASb,ATZT,CAAU,GSY5B,ATZkB,CAAc,KSYKR,ITZnB,CAAxB,CSYiD,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,AdwBJ,AWtBA,ADOA,ECPA,MGFIA,AJSE,CGPDN,AbsBA,EUfI,CCPC,EAAE,ADOA,GAAG,CITD,AJSE,CGPpB,ACFmBsB,CDECrB,AbsBhB,GatBJ,AbsBuB,CcxBC,AJSR,CGPS,ACFAwB,ANfX,AEwBa,CITH,AdwBE,AUfV,CITE,AdwBS,AUfvB,CITI,AbNS,ACTO,IMAG,EGiBV,ETjBqB,CFuClC,AWtBY,EAAQ,EVRY;AYSlC,ACFK,ATZH,AGHA,ARuCA,AC7BA,AUOE,ATjBF,AQwBA,QAAI,CGPC,AbsBA,AUfA,CGPC,ARdF,AJOE,ACVA,CMAD,AGiBI,CDOT,CTdS,CUOG,ADQV,CGRSxB,AFAE,CVPD,ACVA,CMAZ,CKiBK,ALjBO,ARuCZ,CEvCe,CWiBCC,CbsBC,AC7BA,AUOR,ADQA,CCRW,CTjBD,EGGnB,AGHA,APUY,COVQ,APUE,CYOjB,ARdgB,ALoCrB,CatBwB,AFAf,CVPG,CAAc,COV1B,EGiB+B,CAA7B,ATjBa,EAAf,KDUY,CAAZ,wDYOK,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,ATZC,ALqCF,AWvBC,ATjBD,AEcF,AMWM,ADhBN,GEAA,GDgBM,ELtBF,CLqCG,CExCC,EQyBI,CVeV,AExCS,CQyBG,EVeC,AExCD,GFwCI,AUhBP,CVgBQ,AI1BP,EFdQ,CGGD,AHHE,CGGD,ALqCN,AI1Bd,AKLY,ELKqB,CJ0BN,AExCb,CGGV,CAAqB,CLqCK,AExCF,CFwCG,GI1B/B,CJ0Bc,AExCA,CGGV,AHH8B,AEc4B,EJ0BxB,AS/BtC,CPTc,CAAZ,AOSgC,wBT+BhC;AKpCC,AGHD,APSA,AUQA,ATjBA,AEa4D,AMYxD,ADjB4B,EEShC,IAAI,ATjBJ,AQyBI,CLxBJ,CMgBM,EHjBF,CEyBK,CRzBH,CGGC,AJMC,ACTD,AQyBI,EFzBF,CPSF,CSgBQ,ETfX,CCVJ,CMAI,CAAY,AEyBL,CRzBM,AQyBI,GRzBD,CAAC,CMAjB,ANAgB,CAApB,GMA0B,KAAK,KEyBpB,CFzBX,EAAuC;AKkB3CC,ACFIgB,ATZE,AGHA,ALYY,AH4Bd,AC9BI,AUHN,ATPE,AQsBS,CC7BgC,EA0B3C,CGJEA,CJOE,CRtBF,AQqBA,CGJG,AVLW,CUKVzB,AVLU,AH4BV,AC9BA,CCVD,CAAC,CFwCG,AUdF,CLvBG,ALqCA,AC9BA,COVD,CMeG,AXHI,AFFJ,CSgBD,CR1BT,AQ0BU,CIXG,AXHC,AFFD,ACVF,CDUG,ACVd,CMAE,ARwCF,CavBJ,ARdoB,AGHF,ANAA,CYed,AdyBiB,AExCjB,CDSI,CYQeD,ARdA,AGHjB,ALYY,CETO,IKuBC,CAAC,ELvBJ,CAAjB,AKuBoB,CAAjB,EACH,MGVN,CHUa;AGTbU,ACFG,ANfE,ARwCC,AC9BE,AUSJ,ATnBA,AEMM,AMqBF,AHtCR,ADAA,AGeU,EEeN,CGbqB,CPjBzB,ADAA,CQ0BK,CHIG,ATnBJ,AQ2BI,CGVD,ACXkB,CDWjBH,ACXN,AbIM,AUSE,CPbA,AKFA,CFfV,CPmDW,CExCD,AQ2BI,CR3BH,AKXX,CI6BE,ADSc,CTjBD,EAAE,CYOjB,AXjBI,AIXJ,CNmDM,AIlCI,AMoBG,ADtBH,CRMU,CYOCA,AZPA,ACVF,AIXnB,CNmDuB,AIlCA,AKFA,IAAI,CLEjB,CHEF,AMnBR,CPmD8B,AOnD9B,EM4BA,CbuBiC,AExCH,CFwCI,AExCH,GKX/B,ADAA,CCAA,ADAA,CGe2B,CAAA,CToCJ,IExCJ,AIXnB,CNmD8C,AExCH,AKX3C,ADAA,CCAA,AEeuB,CFfvB,CLW8C,AOIpC,CPJqC,IFwCzB,EExCqB,CFwCe,AExCJ,CFwCK,GAAG,CAAC,KExCT,AIXtD,CAAA,CNmD0D,AMnD1D,CNmDsB,CExCoC,EFwCgB,GAAG,CAAC,OAAxE;AcxBL,ATbK,ALsCD,AC9BG,AUSJ,ATpBsD,AEOhD,AMqBF,ADrBJ,EEaA,ERjBE,CHoCF,CUXI,ETjBA,AQJE,CLAA,EJkCC,AUbE,CTjBD,AUSE,CNjBH,AKyBI,CTjBD,AUSE,AFbA,CPP8C,EGGxD,AJQW,ASiBE,ADrBA,CJJH,AJQE,GIRZ,CAAc,AJKZ,ASoBO,CNrBL,EKAiB,CPP8C,AEO9C,AKAC,CPP8C,GEO3C,CCJzB,EAAyB,AHH+B,CSoB7C,ATpBgE,GSoBjE,CTpB8C,CSoBtC,ATpBkC,AOOvC,CAAuB,CJJpC,KDIyB,CAAA,OKAZ,CAAf,MLAuB,EAAjB;ACHL,AGHD,ARyCE,AC9BE,AUSF,ATrBoD,AEQhD,AMkBG,ADlBT,IFjBiB,ADAA,CImCf,ER1BqC,CDYnC,AUSE,ATrBS,AOQX,CPRJ,AEQM,EIPD,ARyCE,AWrBE,CAAC,CVTD,CQJC,CRIC,AGJL,GIPN,APWc,AUSR,APbkB,CJkCtB,AC9Ba,AUSE,AFbF,EDPA,CAAC,ARyCE,AIlCU,CIP5B,ACOA,CTkCE,CWrBI,AFbe,KEaO,APbA,AKAF,CEaxB,APb0B,EOaG,GFbV,CLAG,EAAlB,AKA6B,CEaG,KFbjB,CAArB,KACK,MAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AKST2B,ATbG,AGHA,ARyCE,ACnCG,AUcA,ATrBJ,AEWA,AMmBA,ADpBA,MKOE,AHIE,ATrBJ,CYiBGxB,AbXI,CSwBH,CNnBC,AKDA,CRGD,CSiBG,CCTG,ATrBJ,AQ8BE,CR9BD,AEWP,CUMJ,AHIgB,CFXZ,CLCY,AKDA,CKOCiB,CHGyB,ADUlC,CTxBJ,ASwBe,CNnBf,AMmBI,CAAJ,CR9BA,CQ+BE,ER/BiB,CYiBvB,EZjB0B,CAAC,CQ+Bd,EDrBT,CAA6B,EPVV,CAAW,IOU9B,EAAsC,IPVR,COUa,GPVT,QOUI,CAAiB,IAAjB,CAAsB,IAAtB,CAAtC;ARID,AUQK,ATtB8B,AEYlC,AMoBI,ADrBJ,IAAA,EEWI,ADUA,GNpBC,CKDC,CAAC,CCqBG,EAAE,CCVC,ATtByB,CAAC,CSsBxB,EDSN,CCTS,CAAC,EPVnB,CAAoB,GOUL,ATtBmC,AOWlD,CEW0B,ATtByB,AOW3B,ILCxB,CAA6B,CFZU,CAAmB,EOW1D,EPXuC,AOWJ,CPXD,CEYlC,EAAuC,CKDC,EEWzB,CPVf,OKDmC,CAAgB,IAAhB,CAAqB,IAArB,CAAnC;ATiCA,AWxBsC,ATpBJ,AEclC,AMmBI,ADrBL,KEQgC,CDa3B,CRjCe,CF4Cf,AE5CJ,CEcK,EJ8BE,AUXE,CVWD,CUXG,IVWX,AUXe,EVWA,GUXJ,CNnBX,GAAsB,KAAK,cAAL,CAAoB,IAApB,AMmBmB,CNnBM,EMmBH,CAAC,CNnBvB,CAAtB,IMmByC,CAAW,CAAX,CAA9B;AVYT,AWrBA,ATtBF,AEaA,AMgBS,KAAP,CVcA,EWrBI,CXqBD,AI9BA,CJ8BC,CWrBG,CAAC,CTtBH,EF2CL,CAAU,EWrBN,CAAW,ATtBjB,IF2CE,CKvCO,ALuCW,CWrBd,GPTN,CIZW,CGqBiB,CAA1B,APTyB,EOSI,CXqBX,CKvCQ,ALuCP,CI9BW,CJ8BR,GWrBc,INlBW,WDStB,CAAyB,IAAzB,CAA8B,IAA9B,CAA3B;ACPA,AGJA,AR0CI,AWrBA,ATtBL,AEaC,AMoBA,AHzCF,ADAA,MK8BM,GPTC,CCRC,CK4BC,CVUC,AWrBE,CHrBH,CGqBK,GPTZ,CIZY,AGoB0B,AL7BxC,CNmDiB,CAAP,AI9BQ,GGrBlB,CCSS,CHIc,AGJF,AR0CE,AI9BA,GCRG,EGJjB,CAAkB,CAAlB,CHIsB,AGJ7B,AR0CI,AI9BY,CAAc,CJ8BC,EKtCP,CAAU,AJQd,AGAJ,CAAmB,ECRX,CAAc,CDQtB,CAAhB,OCRwB,CAAxB;AGHD,AR0CO,AC9BN,AUSI,APTL,AMoBG,AH1CJ,ADAA,MK+BM,ADWF,IVUI,EUVE,CTpBD,CSoBG,CVUA,AWrBG,CXqBF,CWrBI,CVTH,ASmBL,CTlBJ,CUQe,CAAC,CXqBb,CAAY,AC9BX,CACC,GD6BF,AWrBS,CXqBQ,AWrBG,CVRb,IAAL,CAAU,CUQH,CAAmB,GAAG,CVR7B,AUQ8B,EVT/B,EAEJ,EUO+B,CAAW,CAAX,CAAnB,CVTR,CAEG,UAAC,KAAD,EAAQ,KAAR,EAAe,IAAf;AIVV,ALsCyB,AC5Bf,AUK4B,ADcpC,KCd6B,CDc7B,IL7BE,CAAC,CLsCoB,GC5BS,ASmBvB,CVSkB,CUThB,CVSkB,CAAR,AC5Be,CAAC,MIVvC,CJUkC,AQLzB,CJLa,AJUyB,KAAb,MAAwB,KAAhD;AIRV,ALoCkC,AC5BxB,AUSR,ADUa,AH3CjB,ADAA,AGmBW,ORGF,CSqBQ,CTlBZ,CITG,CMiBG,ADUS,CVSgB,AC9B3B,CAGA,ASkBQ,EL3BJ,CLoC2B,AWnBpC,ADUW,EL3BC,ALoC0B,KC3BjC,EEfJ,EDAiB,GCAN,AFeA,GITe,CAAC,AHNG,OGMnB,ALoCS,CKpCe,OAAxB,CAAd;AACA,AFNA,AHyCiE,AC3BnD,AUSb,ATvBD,AQgCoB,GCrBtB,GRXE,EOgCoB,EL1BhB,ELmC6D,CGzC1D,ADAA,CCAC,AOgCkB,CL1BjB,AJQS,CSkBE,CPhCpB,EHyCwE,CKnC1D,CAAC,ALmC2D,CKnC1E,AJQyB,CD2BF,AC3BG,CIRR,AHNA,GDcJ,CEdC,ADAR,CAAgB,CMCX,ELDO,CAAC,CDAb,CAAP,CCAe,EAAf,gBAA+B,GAA/B;AEQA,AGNA,ALDD,AHwC+E,AC3BhE,AUUd,ATvBD,AQ+Bc,AH1Cb,ADAA,AGoBA,EEcA,INhBA,CJGO,CAAP,AUaM,EHtBF,AGsBI,EXiBsE,CS/BvE,EDRE,CRuCyE,CS/BvE,CT+ByE,GKjCrE,AGNX,CHMY,AGNA,EJWP,AKHF,CAAoB,CEclB,ENhBT,AGNI,CHMmB,AMgBf,EAAQ,EHtBW,CHM3B,AGNA,CCQ4B,CJFE,AGNA,AJWF,CCL5B,KIE2B,EAAY;ADPrC,ARsCqB,AC1BxB,AUUG,APXF,AMgBO,AH3CF,ADIL,AGoBE,KCmBF,GCLM,EJtCD,ADIA,CNkDC,AWhBG,CAAC,AFdF,ELGA,CIXC,CCQG,CDRV,CFZF,CGoBe,CFxBV,CIsCC,ALlCU,ECJU,AEwBP,CLGD,CAAC,COWK,AJtCnB,EH2BL,CEvBwB,CAAC,IGoBN,CEcjB,AFdiB,EEcgB,KFdpB,CHpBC,CAAuB,AGoBrC,KHpBc,CAAhB;ADkBA,AGLC,ARsCI,AWhBD,APXF,AMmBH,AH1CC,GGLmC,GCuC/B,CHxBJ,CDVM,CPgDF,AWdG,CNjBH,AMiBI,GHrBH,AJUE,EJ2BI,CWhBP,CAAW,EJlCE,EIkCb,APXF,COWkB,AJlCA,GFiBD,CAAC,CMiBhB,GJlCwB,CAAC,CFiBzB,KAA2B,CAA/B,EAAkC,IEjBd,CAAuB,CIkCN,GAAG,CAAC,AJlCrB,CAApB,KIkCqC,CAAW,CAAX,CAAjC;ANhBF,AGJA,ARqCI,AWhBH,APXC,AMmBN,AH1CE,ADDA,AGoBE,ECuBJ,EH1CE,CIgCE,GDUE,ADvBF,ET+BI,AURA,AJ3CD,CKmCI,ENjBF,AIED,CAAC,CDNG,ARqCA,AWhBG,APXJ,AGvBE,CPkDA,AOlDC,CFiBV,CAAU,AMiBI,ALnChB,CKmCiB,ALnCH,CEcC,ACMb,CLIE,AKJU,CT+BR,CAAY,CKjChB,ADMgB,CCNC,CKyBZ,CF7BG,ARqCJ,AOlDN,CPkDuB,AWhBV,ALnCb,CNmDM,AURA,AJ3CkB,CEcC,ADbC,CG0CZ,CRhCW,AIXzB,AGoBE,CHpB0B,AGoBF,CJFxB,ADME,CIV0B,CDbC,CEmBD,CAAC,CPTS,AIXxC,CKmCsC,CHrBb,CAAY,GGqB5B,AFfP,CFnBF,CIkC6C,CHrBpB,GAAqB,CAArC,GACH,KAAK,MAAL,CAAY,EAAE,KAAK,OAAnB,CADG,GAEH,KAAK,MAAL,CAAY,KAAK,OAAjB,CAFJ;AHKD,AGFA,ARmCI,AWhBD,ATxBJ,AEaI,AMmBJ,MCRI,EDQE,CCRC,CAAC,ATxBJ,EQgCM,GAAgB,CRhChB,GSwBN,ATxBmB,CSwBL,CTxBlB,MSwBI,CAAsB,CVXZ,SUWY,IVXsB,AUWlB,EAAG,QVXkC;AILpE,AGFA,ARmCI,AC5BgE,AUY7D,ATxBN,AESA,AMuBE,AH3CF,ADDA,AGoBE,MPRF,AQgCE,CVEA,CWVI,AFhBJ,EFnBG,ADDA,CKoCI,ATxBJ,CSwBK,ATxBJ,AQgCE,CDxBF,CCwBI,ADxBH,GCwBM,CCRP,ADQQ,AH3Cd,CImCiB,ATxBjB,AKXc,CLWA,AIZd,GKoCM,ALpCY,CKoCI,AFhBpB,GCwBQ,ADxBU,CCwBI,CCRlB,CTxBQ,CAAC,AKXf,ADD0B,AGoBxB,CFnByB,ADDA,CJYT,CQ+BQ,MCPK,GJnC/B,CImCmC,CAAC,AJnCI,ADDtB,CAAuB,GKoCnC,EJnCuC,ADD3B,CAAlB,SCCA,IImC8C,IAAI,CAAC,IAA7C;ARzBgB,AH0CrB,AWhBI,ATxBH,AQgCA,MAAA,CPlCoB,AQwBlB,CRxBkB,EOkChB,ERhCE,AQgCA,IRhCI,GAAG,CAAC,CAAC,CCFK,GAAA,EDEP,CAAS,CAAT,CAAb,CADgB,CACU,OCFN;AH2CvB,AC7BC,AUaG,APZH,AMiB0B,AHxC1B,ADFA,AGoBE,KEaO,ADST,CTlBA,EMtBM,AEkBJ,EHpBG,CKqCI,APZJ,EKLC,CFlBM,AEkBL,GRII,AGCX,AGvBe,CNsBH,AGCA,EEzBZ,CAAgB,CFyBhB,EKLE,CRIF,AMtBuB,AEkBL,CRIE,AMtBI,IDFxB,AGoBE,CHpBwB,GAA1B,CAA8B,CLwBV,CGCI,EHDD,AMtBR,CAAuB,CNsBZ,MGCQ,AGvBnB,CHuBoB,AGvBnC,CDFA,EFyBA;AHAE,AUaE,ATzBF,AEaH,AGvBC,IAAA,EImCI,EVbF,CUaK,CAAC,AJnCF,CAAC,CLUD,CDYA,CAAC,CMtBP,CImCI,ATzBM,CSyBK,ATzBJ,CKVG,GImCV,CVbF,AUakB,CVbJ,ACZV,CAAY,AKVlB,CFiBU,AHPJ,CDYJ,CUaE,ATzBiB,CAAf,MMKU,ANLY,EGOC,CHP3B,CSyB2B,CTzBI,ESyBD,CNlBM,AMkBL,GTzBM,CAAC,IAAP,CSyBJ,ATzBgB,CSyBF,GTzBM,CSyB7C,ATzB8C,MAAL,CAAY,CAAZ,CAAZ,EAA/B,KSyBmD,ATxB9C,GSwBiD,CAAC,ETxB5C,GAAG,ISwBqC,CAAc,CTxB7C,CAAC,ESwBnB,ITxBY,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAd,CAAT;AGQP,AGHA,AGoBG,ATxBF,AQgCD,AJ9CA,AGqBE,OPXF,CQoCI,ADzBF,EJAI,AGHF,AFlBC,CI8CE,CAAC,ADzBF,CAAC,EDHE,ACGP,CAAQ,CCyBN,CAAU,AJ9Cd,CAAc,GEkBV,ECGF,CJAmB,CKyBjB,ADzBgB,CDHC,AE4BrB,CLzBwB,AGHxB,CE4ByB,CF5BD,AFlBxB,CAA0B,EDqBG,AIA3B,IJAsB,ACrBO,CDqBG,GAAV,CAAc,KCrBtC,IDqBwB,CAAxB;AGFE,APMA,ACVF,AQgCE,AH5CF,AEmBC,MCyBC,CDhCK,EAQN,CFpBI,ENsBG,ASsBA,CF5BD,ANJA,AQgCE,ADhCF,CAQD,CREK,ESsBT,CTtBY,ASsBA,AH5Cd,CLYA,AKZc,CCgBZ,CE4Be,CTtBC,ASsBA,CF5BD,CAAC,ACIZ,CDJJ,ICIS,EREO,ASsBJ,AH5Cd,AEoBc,CREI,ASsBU,AH5CD,GG4CzB,EAA+B,CH5CjC,CNsBc,CAAY,AMtBS,GNsBrB,EAAiB,ASsB7B,CH5CsC,ONsB1B,CAAZ,EMtBF;AFoBA,AGHE,AGmBA,ATvBH,AQgCG,AJtDJ,AG8BI,QAAA,EJDE,CAAC,AMgBI,EDSA,ADxBH,CAAC,CDJE,EAAP,CGmBc,CAAC,CDSD,CAAC,GDxBf,CT8BC,AS9Be,CJDd,AMgBK,EAAP,ADSO,CDxBP,CJDsB,AKyBtB,ADxBqB,GT8BF,ES9BnB,ELGkB,GJ2BgB,KK/BG,CAAC,MAAhB,KAA2B,CAAnD,EAAsD;AAEtD,AGJC,ARkCD,AC7BE,AUcD,APbmB,AMsBnB,AH5CD,ADJD,MDwBC,CGPA,CPQE,EMrBG,GCgBE,APKD,CAAC,EMrBP,ENqBE,CAAU,AMrBE,EFoBC,CAAC,AJCd,CAAc,EMrBhB,CNqBmB,CAAC,EIDpB,CAAwB,CJCtB,EAAwB,GAAxB,IIDsB,OAAO,EAAG;AAChC,AGJA,ARkCF,AWxCF,AFSI,CEnCuC,EAoD3C,KNhBI,CMgBJ,CXcM,AWdN,IApD2C,CHgC/B,AGhCD,AFmCA,GJCG,CAAC,CGJE,ECGC,CT+BhB,AS/BiB,IDHP,GAAe,ACGhB,CJCS,AGJS,ACGF,CDHhB,GACH,CCEG,CAAP,GDFS,MAAL,CAAY,EAAE,KAAK,OAAnB,CADG,GAEH,EAFJ;AHKE,AGFH,APEC,AGEF,AMsBA,AH5CA,AEmBC,OAXM,CRYL,AQZF,EJYI,AEpBC,CNoBA,ASwBE,CTxBD,CGEC,GMsBK,CLxBD,AKwBE,CLxBD,ADEA,CHFV,CAAY,ASwBE,AH5ChB,CG4CiB,AH5CD,CFoBL,ADEJ,CCFH,ADGD,IHHD,AGEK,CHFe,EGInB,AMoBU,AH5Cb,CG4C2B,AH5CD,GHsBnB,AMsBK,AH5CZ,CHwBQ,AGxBsB,CG4CE,ETxBV,ESwBV,CAAL,CACJ,CTzBwB,AMpB3B,EHwBQ,CMoBD,CACC,GNrBK,EAAG,KMqBR,QAAQ,EAAG;ALxBhB,AGFJ,AR+BC,AC9B2B,AGKvB,AMqBA,AD1BL,SJDa,CAAV,AL+BE,AUJM,ENrBA,KHLqB,IS0BV,CT1Bc,CAAC,AGKf,CMqBG,ENrBA,CHLO,CAAU,GAAV,CAAc,AS0Bb,CAAC,IT1BF,EAAqB,AGK5B,CAAA,AMqBA,CAAiB,CT1BV,CAAJ,CS0BH,CAAqB,ENrBrB,CAAY,OAAZ,CAAoB,GMqBpB,CAApB,CNrBoB,CAApB;ACHH,AL6BC,AC/ByB,AGMvB,AGxBJ,OFgBA,CLiCE,CC/BA,CMlBG,KHwBO,KGxBZ,CPiDe,EOjDG,CPiDA,EIzBK,CAAC,EJyBD,AOjDA,EDNP,GF8BL,GAAwB,AE9BP,ECMV,CAAgB,EPiDhB,AIzBqB,CJyBF,AIzBG,CGxBtB,IPiDA,CAAhB,QIzBiC,CAAoB,UAApB,CAA+B,MGxBlE,KHwBmC,CAAxB,GAAsE,OAAO,CAAC,OAAR,EAA7E;ACHL,AL6BE,AC/BA,ACzCL,AE+CO,AMoBC,AH5CJ,ADNA,ICMA,GP+CA,AClCA,ACpCJ,AE0CW,CJ8BL,AExEN,AE0CI,EMyBQ,AH5CF,CG4CG,AH5CF,ADNF,INuDI,AExEb,GFwEM,AExEN,EFwEkB,CMvDd,CIkDI,AJlDY,EIkDM,GH5CtB,CAAwB,CLvB5B,EIiBI,GAA4B,GCM5B,CDNA,CCMmC,MAAK,UAAxC;APkDE,AC/BH,AGMA,AMoBO,AH7DR,ADWC,QIkDO,GAAG,CAAC,GVKD,GULH,CAAW,GVKD,CAAC,AULX,CAAgB,ED1BX,GDDG,AE2BR,CVKG,AULmB,CVKH,CS/BF,ET+Bd,CAAP,CQhCyB,2BE2BrB;AF1BN,ARgCC,AULK,AH7CP,AEoBC,OTuBoC,CAQpC,ES/BM,CDFD,GCEK,CCyBG,EF3Bb,ACEa,GDFC,CCEG,CCyBG,CAAC,EF3BrB,ECEiB,CAAA,ECyBJ,CAAgB,EAAhB,CAAP,CDzBO,EAAb;AC0BK,ADzBL,MAAA,CCsBI,GDtBA,CAAC,ECyBM,IAAI,CAAC,GDzBhB,CAAgB,IAAhB,YCyBoC,CAAC,WAAD,CAAzB,EAAwC;AF3BnD,AE4BM,ADzBN,QCyBM,EF5BF,CE4BK,ADzBJ,CCyBK,GF5BD,ECGT,CCyBM,ADzBM,CCyBK,EF5Bb,CAAY,CE4BV,CAAgB,AJpDN,IEwBZ,CE4BE,ADzBN,CAAwB,CDHC,APChB,GQEmB,CAAC,CDH7B,EAAgC,APCL,EGMD,EKJ1B,MLIqC,OMqBQ,WAAvC;AF3BJ,ARgCF,AC/BA,AGMA,AMqBM,AJpDN,AG2BD,UT6BO,AC/BA,AGMF,GIPG,ARgCE,AC/BA,AKzBF,EIoDM,CVID,AC/BA,AGMF,EE/BE,CEwBV,CAAY,CPCG,CS2BG,CAAC,ET3BT,CODV,APCoB,AKzBtB,CEwBqB,CJOC,CHNV,CAAc,AS2Bb,CAAgB,CF5BH,CJO1B,AMqBa,CAAP,CT3ByB,AGMF,CHNG,EODX,CAAY,IPCrB,CAAZ,CODE,EAAuC,KAAK,GAAG,KAAK,MAAL,CAAY,MAA3D;AH1CN,AG2CK,ARgCC,AIzBA,AMqBG,AJpDN,ODnBH,AKoEe,CLpEf,AL2EM,KIzBK,AMqBI,CVIH,CK3EZ,CL2EM,CIzBA,CClDN,ADkDgB,IJwBA,CIxBV,CAAgB,MClDtB,ADkD4B,CAAC,AGtBR,OHsBf,AGtBoC;APgDpC,AChCF,AGOC,AMqBK,AH1CN,QP8CE,AUJI,EH1CD,CG0CI,CAAC,CVIH,AChCC,CMdR,CP8CS,CChCE,ES4BL,CAAW,ET5BD,ES4BV,CAAgB,IVEV,CUFN,CT5BC,GACH,GAAG,CAAC,IAAJ,CAAS,KAAK,CAAC,QS2B2B,CT3B1C,EAA0B,KAAK,CAAC,ES2B9B,GT3BF,CADG,GAEH,OAAO,CAAC,OAAR,CAAgB,IAAI,KAAJ,CAAU,mBAAV,CAAhB,CAFJ;AOAA,ARiCE,AC9BH,AGKA,AMqBO,QVIJ,GQjCG,GRiCG,CUJK,CVIH,EQjCV,GAAe,ARiCA,CQjCC,CAAhB,AE6BqB,CAAC,IAAT,AD1BH,ET2BE,AUDN;AF5BP,ARiCG,AUJG,AH5CL,AEmBA,OFnBA,CPgDE,KS7BK,IT6BI,AOhDN,CEmBO,CT6BC,EOhDb,EAAS,CEmBF,CAAY,UAAnB,EAA+B;ATyBnB,AUET,AH9CS,AEoBV,EHlD4B,GI8DvB,EVYP,AUGG,CH/CS,GGgCL,CAeC,AH/CI,AEoBJ,CFpBI,GD9BkB,CC8BlB,AD9BkB,AGkDjB,CFpBD,EEoBI,EC2BR,GH/CI,AEoBS,CC2BT,AH/CA,EG+CG,CH/CH,EAAA,AEoBI,CFpBJ,AEoBgB,GFpBhB,OAAA,AEoBV;AC4BI,AHhDkB,OAAxB,EAAK,CGgDK,GHhDD,IGgDQ,CHhDZ,GGgDK,CHhDD,GAAA,CGgDiB,CHhDjB,CAAT,CNmBe,EGKD,GHLuB,AS6B/B,EACE,GAAG,CAAC,MAAJ,CAAW,IAAX,CAAgB,KAAhB,CAAsB,IAAtB;AVCR,AC9BA,AGKA,AMyBG,AJhFP,AGmDM,KCWK,EAmBJ,AJjFP,CAAA,ENgFU,AC9BF,ESYG,ADXD,CT6BG,AIzBD,AM0BC,ET/BA,AKlDb,CNgFgB,CS7BD,CLIE,AEvDjB,CLkDQ,CAAU,CD8BG,CMhFrB,CLkDQ,AS+BK,CT/BS,ES+BN,CT/BS,AQCf,CRDgB,AGKf,AM0BQ,GNzBX,AKLqB,CT6Bb,AC9BR,CD8ByB,AC9B7B,EAA6B,CD8BjB,AS7BkB,CT6B9B,CIxBW,CAAC,EKLuB,ILK/B,CAAe,AKLqB,MLKpC,CADG,GAEH,AKN+B,CAAgB,ILM1C,CKNP,EAAwD,WLMtD,GACC,IADD,CACM,KAAK,mBADX,EAEC,IAFD,CAEM,KAAK,QAFX,CAFJ;AHJE,AGSH,AMsBK,AHpDoB,AEsBpB,MC8BA,GAAG,CAAC,IT/BA,ES+BJ,CAAW,CT/BH,GS+BR,CAAgB,CT/BZ,IS+BJ,CAAsB,GAAG,CAAC,OAA1B,GT/ByB,GAAG,CAAC,IAAzB,0BAAN;AD8BF,AC7BC,AS+BE,AD9BA,KCSI,CAAP,IVmBM,MAAM,GAAI,OAAO,GAAP,KAAe,SAAhB,GAA6B,GAA7B,GAAmC,GAAG,CAAC,MAAtD;AQnFJ,AEsFG,AHpDC,OClCJ,CAAA,EDkCQ,KClCR,ADkCa,CAAC,EClCd,KDkCQ,KClCR,ADkC0B,IAAI,CAAC,KAAvB,IAAgC,KAAK,MAAL,KAAgB,QAAQ,CAAC,aAA7D,EAA4E;APkD5E,AC7BA,ASlDmC,AH+BjC,AEoBA,CCnDO,SV+EL,AC7BA,CD6BC,EC7BE,AMnBA,AEoBA,CRDC,GD6BR,EAAa,AOhDX,AEoBA,CAAY,CRDd,EAAiB,QQCf,CLQa,AKRW,KAAK,MAAL,CAAY,UAApC;AT6BA,AC9Be,AGUjB,AG5BC,AEoBA,MLQD,MJoBQ,CIpBD,CAAC,GJoBK,GAAI,CIpBjB,GACG,GJmBqB,CIpBxB,CACQ,CJmBS,IInBJ,CJmBmB,OIpBhC,EJoBgB,AIlBb,GJkB0C,EIpB7C,CAES,CJkBwC,KAAJ,CAAU,GIlB9C,MAAM,EAAG,UJkB2B,CAA7B,GAAgE,GAAG,CAAC,KAAlF;AACA,AC/Be,AGab,AMqBR,AHnDG,AEoBA,QLUK,CMqBC,MVHI,AIlBE,CAAC,GAAR,CAAY,CMqBpB,CVHoB,AUGE,CVHD,EUGrB,CNrBQ,CMqByB,GVHpB,CAAgB,KAAhB,CAAP;AACD,AChCgB,AGcd,AMqBL,MAAM,CNzBJ,MMyBW,GAAG,IAAI,MAAJ,CAAW,sBAAqB;ANpB/C,AMqBD,qDAD2B,GAC0B;AVFnD,AClCiB,ASqCnB,UVHM,OAAO,GAAP,KAAe,GS7BT,CFpBC,EGkDc,GVDrB,AUGyB,IVHG,GAAG,CAAC,SAApC,EAA+C;AAC7C,AClCA,ASqCJ,AHpDE,AEoBA,MAAA,ET6BE,EOjDI,CPiDD,CAAC,CS7BC,CAAC,CFpBG,EEoBX,CFpBc,AEoBF,GT6BV,EOjDiB,CPiDD,GAAG,CAAC,COjDR,CAAY,CNeN,GAAG,CAAC,ASkCC,AHjDzB,EPiDE,CUG+B,ITrC/B,eQKF,+GRLiC;ADmChC,ACnCgC,ASsCnC,AHpDE,AEoBD,WFpBM,KNcM,KAAsB,AMdjC,CAAgB,KH8BP,CMkBgB,GAIC,AHpD1B,GAA4B,KAAK,YAAL,CAAkB,KAAlB,CAA5B;AH+BA,AMsBF,WNtBO,UAAL,CMiBc,ENjBI,AMsBC,GALL,CNjBd,AMiBF,CAD+B,CAMJ;AVHzB,ACnCI,AGiBL,AG/BC,WAAK,EPiDE,GCnCC,EDmCI,GCnCC,AMdb,CAAgB,GPiDT,ACnCC,CDmCY,ACnCF,GDmCX,ACnCC,CDmCR,ACnCsB,CMdtB,CAA0B,GNclB,CAAJ,EAA0B,AMd9B,CAAiC,QAAjC;APkDD,ACnCO,ASsCR,SAAO,OAAO,CAAC,GTtCD,CSsCP,CAAa,ETtCF,CSsCX,CAAP,GTtCc,CQMA,gBRNmB,KAAnB,6BAAN;AACD,ASsCR,AHrDG,AEqBA,MAAA,KFrBK,EEqBE,CAAC,GFrBR,AEqBA,CFrBY,AEqBA,SFrBZ,CAAsB,GAAtB,CAA0B,QAA1B,mBEqBA;ARLG,AQMJ,0BLUS;AHrBS,AGsBjB,AMsBJ,AHtDI,MAAA,GGsDK,GHtDC,CAAC,gBGsDX,CAA8B,EHtD1B,CAA2B,CPkDP,OAAe,AUIvC,CHtDI,CGsD6C,CHtDP,KAAK,UAA3C;APkDmC,ACxClB,AGuBjB,AMsBF,AHtDE,WHgCK,AGhCA,IHgCL,AGhCA,CHgCU,AGhCA,KHgCV,GGhCA,EAAoB,KAApB,WGsDiB,mBAAnB,0CAAwC;AT7CrB,AGwBjB,AMqBE,AHrDH,QGqDO,GNrBD,IMqBQ,KNrBb,WKXiB,OAAqB,ICgCpC;AVJA,ACzCe,AGyBlB,AMqBC,AD/BA,QC+BI,EVLI,AS1BH,IT0BO,AS1BZ,CC+BW,CAAC,CVLc,EAAxB,CUKE,CAAa,WAAb,CAAJ,EAA+B,OAAO,IAAP;AVJ7B,AC1Ce,AS+ClB,MVLG,KAAK,CAAC,OAAN,CAAc,UAAA,OAAO,EAAG;AACtB,AC3Ca,AQejB,OAAA,UAAK,IAAL,EAAS,QFrBO,MAAY;APmDxB,AC7Ca,ASgDnB,AHrDE,AEoBY,QAAA,CCiCP,EHrDA,CPkDK,AS9BE,CAAA,CCiCd,CVHe,EOlDb,AEoBY,CT8BI,AOlDJ,AEoBA,IAAA,CFpBZ,AEoBY,ET8BW,CAAC,AOlDJ,AEoBR,ELYC,AKZD,CAAA,CFpBZ,CPkDgB,CAAc,AS9BlB,GT8BI,CAAZ,AS9BQ,CLYgB;AJmBxB,AC9Ca,AG4BjB,AMqBH,AHrDE,AEmBsB,QAAA,IT+Bb,AS/Ba,CLad,AKbc,ET+BV,CAAC,CS/BS,CLaT,AKbS,IT+Bb,ES/Ba,CT+BA,AS/BA,CT+BjB,EAAoB,AS/BH,EAAA,CAAA,CLad,CAAoB,CJkBG,AS/BT,IT+Ba,EIlB3B,AKbc,CLac,EJkBL,CAAU,IIlBjC,CAAP,UJkB8B,CAAN;AC9CP,AG6BlB,AKdiC,OAAhC,EAAK,IAAI,KAAJ,IAAI,GAAA,EAAA,CAAT;AT2B0B,AC1CT,mBD+CY,GAAG,CAAC,MAAJ,KAAe,CAAhB,GACpB;AAAE,AChDO,AQee,UTiCtB,IAAI,EAAE,GAAG,CAAC,CAAD,CAAX,MOlDE;APkDc,AChDP,AMDf,UPiDsB,COjDjB,IPiDsB,EAAE,AOjD7B,CAAY,KAAZ,kBH+BqB;AJkBf,AChDS,AG8BM,AG9BxB,AEiBC,ST8B4B,CS9BxB,ETgCI,GShCC,UAAT,EAAqB;ATgCX,ACjDO,AQkBf,UT+BQ,IAAI,EAAE,GAAG,CAAC,CAAD,CAAX;AAAgB,AC3CvB,AGyBD,AKZE,UT8BsB,AIlBlB,EKZA,ELYI,CJkBmB,EAAE,AIlBlB,AKZF,CAAC,ET8BsB,CAAC,CAAD,AIlBhB,GKZZ,KAAkB,IAAI,CAAC,CLYhB,CAAoB,AKZ3B,IAA6B,KAAK,CAAC,KLY5B,EAAb,AKZmC,KAAkB,IAAI,CAAC,IAAxD,EAA8D;AT8BxD,AC1CT,AGyBC,AKZI,STsBsB,IIVnB,CKZG,GLYC,CAAC,GAAL,CAAS,CKZG,GAAI,KAAK,CLYZ,AKZa,CFlBV,GH8BC,GKZG,KFlBa,AEkBK,IAAI,CAAC,EAAxB,GACd,KAAK,UAAL,CAAgB,OAAhB,EADc,GAEd,KAAK,UAAL,CAAgB,WAAhB,EAFJ;ATsBsB,AIVN,AG7BpB,AEoBI,YTwBQ,CO5CL,EH6BiB,AKTf,CTmBiB,KIVE,CAAC,AG7B7B,CADoC,CP6CxB,AO5CM,CEoBd,CAAgB,ETmBM,QIVF,AKTpB,CLSwC,AKTb,OLSP,CAA4B,CKThD,GLSoB,CAAJ;AJUM,AIVN,AG5BrB,AEoBI,OLQI,CAAP,IJekB,KALQ,QAKR,KALQ;AIT3B,AKRE,OARD,MAQO,CAEN;ATwBG,ASvBL,YTuBW,UAAU,GAAG,MAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,UAAA,CAAC;AAAA,iBAAI,CAAC,CAAC,IAAF,COhF/B,IPgF0C,IAAf;AAAA,AC/F7C,AMgBI,ONhBJ,CAAA,CD+F2B,CAAnB,GO/EG,KAAK,INhBhB,EMgBI,CNhBJ,cAAA;AMiBG,gCEyDmB,OAAa;ATsB3B,ASrBJ,UAAI,ETqBI,GSrBC,OTqBL,EAAgB,GSrBC,UAArB,EAAiC;ATsB3B,AIjBU,AKJd,OLIc,CAAA,IKJV,ETqBI,EIjBM,CKJL,ELIK,KJiBI,CAAC,EIjBL,AKJd,ETqBQ,ASrBa,KAAK,QTqBS,ESrBd,CAAgB,ETqB7B,CAAJ,EAAsC,ASrBrB,ITqByB,CAAC,IAAD,CAAJ,GAAa,KAAb,CAAtC,KACK,MAAM,IAAI,KAAJ,iCAAmC,IAAnC,EAAN;AACN,AStBJ,STmBG,MAIK;AACH,ASvBP,EFvFoC,MAAA,CAAA,KP8GvB,WAAW,GAAG,MAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,OAAF,CAAU,OAAV,CAAkB,IAAlB,MAA4B,CAAC,CAAjC;AAAA,AO9GhD,OAAA,CAAA,GP8G8B,CAApB,GO9GV,GAAA,SAAA;;AP+GU,cAAI,WAAJ,EAAiB;AACf,gBAAI,WAAW,CAAC,IAAZ,aAA4B,KAA5B,CAAJ,EAAuC,IAAI,CAAC,IAAD,CAAJ,GAAa,KAAb,CAAvC,KACK,MAAM,IAAI,KAAJ,iCAAmC,IAAnC,EAAN;AACN,ASrBF,OAAA,CAAA,GTkBC,MAIK,GStBN,GTsBY,AStBZ,ITsBgB,KAAJ,CAAU,EStBtB,aTsBY,CAAN;AACN;AACF,OAtBD;AAuBA,aAAO,IAAP;AACH;;;mCAGqB,UAAmB;AACvC,UAAI,CAAC,KAAK,SAAV,EAAqB,KAAK,SAAL,GAAiB,QAAjB;AACtB;;;wBAEe;AACd,aAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB,CAAP;AACD;;;wBACiB;AAChB,aAAO,KAAK,QAAL,CAAc,KAAd,CAAoB,CAApB,CAAP;AACD;;;;;;AAG+B,OAAA,CAAA,OAAA,GAAA,OAAA","file":"main.c39d6dcf.js","sourceRoot":"..\\src","sourcesContent":["import { ITerminal } from './Terminal';\r\n\r\ntype Context = {\r\n  params: string[],\r\n  flags: FlagsHash;\r\n  processed ?: any;\r\n  caller: ITerminal;\r\n};\r\n\r\ntype ValidationResult = { result: boolean, error?: Error, processed ?: any } | boolean;\r\n\r\ntype Action = (ctx: Context) => Promise<Error | void>;\r\ntype Validation = (ctx: Context) => ValidationResult;\r\n\r\n// Функция валидации должна создавать объект c полем result: boolean; \r\n\r\ntype CommandDefinition  = {\r\n  text: string,\r\n  action: Action,\r\n  validation: Validation,\r\n  aliases ?: string[] | string,\r\n  flags ?: Array<string | Flag>,\r\n  info ?: string;\r\n}\r\n\r\ntype Flag = { name: string, info: string, aliases: string[], type: 'boolean' | 'string' };\r\n\r\ninterface FlagsHash {\r\n  [flagName: string] : string | boolean\r\n}\r\n\r\nclass Command {\r\n\r\n  public readonly text: string;\r\n  public readonly info: string;\r\n\r\n  private readonly _aliases: string[];\r\n  private readonly _flags: Flag[] = [];\r\n  private readonly _action: Action;\r\n  private readonly _validation: Validation;\r\n  private _terminal: ITerminal;\r\n\r\n  constructor(def: CommandDefinition, caller: ITerminal) {\r\n    this.text = def.text;\r\n    this._action = def.action;\r\n    this._validation = def.validation;\r\n    this._terminal = caller;\r\n\r\n    this.info = (def.info) ? def.info : 'No info for this command';\r\n    \r\n    if (def.aliases) {\r\n      this._aliases = (typeof def.aliases === 'string') ? [def.aliases] : def.aliases;\r\n    } else {\r\n      this._aliases = [];\r\n    }\r\n    \r\n    if (def.flags) {\r\n      def.flags.forEach(f => {\r\n        if (typeof f === 'string') {\r\n          this._flags.push({ name: f, info: 'No info for this flag', aliases: [], type: 'boolean' })\r\n        } else {\r\n          this._flags.push(f);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  exec(params: string[], flags: string[]) : Promise<Error | void> {\r\n    // Checking flags correctness\r\n    let resolvedFlags: FlagsHash;\r\n    try {\r\n      resolvedFlags = this._resolveFlags(flags);\r\n    } catch (err) {\r\n      return Promise.resolve(err);\r\n    }\r\n    // Validating parameters\r\n    const ctx = {\r\n      params,\r\n      flags: resolvedFlags,\r\n      caller: this._terminal,\r\n      processed: undefined\r\n    }\r\n    const val = this._validation(ctx);\r\n    const result = (typeof val === 'boolean') ? val : val.result;\r\n    if (!result) {\r\n      const error = (typeof val === 'boolean') ? new Error('Invalid parameters!') : val.error;\r\n      return Promise.resolve(error);\r\n    }\r\n    \r\n    if (typeof val !== 'boolean' && val.processed) {\r\n      ctx.processed = val.processed;\r\n    }\r\n    return this._action(ctx);\r\n  }\r\n\r\n  private _resolveFlags(flags: string[]) : FlagsHash {\r\n      const hash: FlagsHash = {};\r\n      flags.forEach(rawFlag => {\r\n        debugger;\r\n\r\n        const arr = rawFlag.split('=');\r\n        if (arr.length > 2) throw new Error('Invalid flag!');\r\n        const { flag, value } = (arr.length === 1)\r\n          ? { flag: arr[0], value: true }\r\n          : { flag: arr[0], value: arr[1] };\r\n\r\n        const findByName = this._flags.find(f => f.name === flag);\r\n        if (findByName) {\r\n          if (findByName.type === typeof value) hash[flag] = value;\r\n          else throw new Error(`Invalid value for flag${flag}`);\r\n        }\r\n        else {\r\n          const findByAlias = this._flags.find(f => f.aliases.indexOf(flag) !== -1);\r\n          if (findByAlias) {\r\n            if (findByAlias.type === typeof value) hash[flag] = value;\r\n            else throw new Error(`Invalid value for flag${flag}`);\r\n          }\r\n          else throw new Error('Invalid flag!');\r\n        }\r\n      });\r\n      return hash;\r\n  }\r\n\r\n  \r\n  public bindToTerminal(terminal: ITerminal) {\r\n    if (!this._terminal) this._terminal = terminal;\r\n  }\r\n\r\n  public get flags() : Flag[] {\r\n    return this._flags.slice(0);\r\n  }\r\n  public get aliases() : string[] {\r\n    return this._aliases.slice(0);\r\n  }\r\n}\r\n\r\nexport { CommandDefinition, Flag, Command };","import { CommandDefinition, Command, Flag } from './Command';\r\nimport ParsedInput from './ParsedInput';\r\nimport { ITerminal } from './Terminal';\r\n\r\nexport type CommandInfo = {\r\n  name: string;\r\n  aliases: string[];\r\n  info: string;\r\n  flags: Flag[];\r\n}\r\n\r\nexport class CommandManager {\r\n\r\n  private _map = new Map<string, Command>();\r\n\r\n  public getInfo(commandName: string) : CommandInfo | undefined {\r\n      \r\n    const cmd = this._map.get(commandName);\r\n    return (cmd)\r\n      ? {\r\n        name: cmd.text,\r\n        aliases: cmd.aliases,\r\n        info: cmd.info,\r\n        flags: cmd.flags\r\n      }\r\n      : undefined;\r\n  }\r\n\r\n  public getCommandsList() : string[] {\r\n    return Array\r\n      .from(this._map.values())\r\n      .filter((value, index, self) => self.indexOf(value) === index)\r\n      .map(command => command.text);\r\n  }\r\n\r\n  public register(definitions: CommandDefinition[], terminal: ITerminal) {\r\n    definitions.forEach(def => {\r\n      this.checkDef(def);\r\n      const cmd = new Command(def, terminal);\r\n      this._map.set(cmd.text, cmd);\r\n      cmd.aliases.forEach(alias => this._map.set(alias, cmd));\r\n    })\r\n  }\r\n\r\n  tryExecute(input: ParsedInput) : Promise<Error | void> {\r\n    const cmd = this._map.get(input.command);\r\n    return (cmd !== undefined)\r\n      ? cmd.exec(input.arguments, input.flags)\r\n      : Promise.resolve(new Error('Command not found'));\r\n  }\r\n\r\n  private checkDef(def: CommandDefinition) : void {\r\n    if (this._map.has(def.text)) {\r\n      throw new Error(`Command ${def.text} already registered!`);\r\n    }\r\n    if (def.aliases) {\r\n      for (let alias of def.aliases) {\r\n        if (this._map.has(alias)) {\r\n          throw new Error(`Alias ${alias} is already registered!`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","export default class ParsedInput {\r\n\r\n  public command: string = '';\r\n  public arguments: string[] = [];\r\n  public flags: string[] = [];\r\n\r\n  public static getFrom(source: string) : ParsedInput {\r\n    const result = new ParsedInput();\r\n    const arr = source.trim().split(' ');\r\n    result.command = arr[0];\r\n    arr.splice(0, 1);\r\n    result.flags = ParsedInput.refineFlags(arr.filter(item => ParsedInput.isFlag(item)));\r\n    result.arguments = arr.filter(item => !ParsedInput.isFlag(item));\r\n\r\n    return result;\r\n  }\r\n\r\n  private static isFlag(value: string) : boolean {\r\n    return /^\\-{1,2}/.test(value);\r\n  }\r\n  \r\n  private static refineFlags(flags: string[]) : string[] {\r\n    let result: string[] = [];\r\n    flags.forEach(f => {\r\n      const temp = f.substr(1); // Удаляем первый слэш\r\n      if (temp.substr(0, 1) === '-') result.push(temp.substr(1));\r\n      else result = result.concat(temp.split(''));\r\n    })\r\n    return result;\r\n  }\r\n\r\n}","interface ILogger {\r\n  tag: 'logger';\r\n  info: (msg: string) => void;\r\n\r\n}\r\n\r\nclass Logger implements ILogger {\r\n  public tag!: 'logger';\r\n\r\n  info(msg: string) {\r\n    console.log(msg);\r\n  }\r\n}\r\n\r\nclass AdvancedLogger implements ILogger {\r\n  public tag!: 'logger';\r\n\r\n  info(msg: string) {\r\n    console.log(`${Date.now()} > ${msg}`);\r\n  }\r\n}\r\n\r\nexport { ILogger, Logger, AdvancedLogger };","import { CommandManager, CommandInfo } from './CommandManager';\r\nimport ParsedInput from './ParsedInput';\r\nimport { ILogger, Logger } from '../lib/Logger';\r\nimport { ITerminalView } from '../views/TerminalView';\r\nimport { CommandDefinition } from './Command';\r\n\r\ninterface ITerminal {\r\n  view: ITerminalView;\r\n  run: () => void;\r\n  stop: () => void;\r\n  getInfo: (name: string) => CommandInfo | undefined;\r\n  getAllCommandsInfo: () => Array<CommandInfo | undefined>\r\n}\r\n\r\nclass Terminal implements ITerminal {\r\n\r\n  public view: ITerminalView;\r\n  private _stopToken = false;\r\n  private commandManager = new CommandManager();\r\n  private logger: ILogger = new Logger();\r\n  \r\n\r\n  constructor(view: ITerminalView, commands: CommandDefinition[]) {\r\n    this.view = view;\r\n    this.commandManager.register(commands, this);\r\n\r\n    this.readAndExecute = this.readAndExecute.bind(this);\r\n    this.handleCommandOutput = this.handleCommandOutput.bind(this);\r\n    this.newCycle = this.newCycle.bind(this);\r\n  }\r\n\r\n  public use(dependency: ILogger) {\r\n    switch (dependency.tag) {\r\n      case 'logger':\r\n        this.logger = dependency;\r\n        break;\r\n    }\r\n    this.logger.info(`new ${dependency.tag} is set`);\r\n  }\r\n\r\n  private readAndExecute() : Promise<any> {\r\n\r\n    return this.view\r\n      .read()\r\n      .then(input => {\r\n        const parsedInput = ParsedInput.getFrom(input);\r\n        return (parsedInput.command) ? this.commandManager.tryExecute(parsedInput) : Promise.resolve();\r\n      })\r\n  }\r\n\r\n  private handleCommandOutput(output: any) {\r\n    if (output instanceof Error) {\r\n      this.view.write(output.message);\r\n    }\r\n  }\r\n\r\n  private newCycle(): Promise<any> {\r\n    return (this._stopToken)\r\n      ? Promise.reject('exit')\r\n      : this.readAndExecute()\r\n        .then(this.handleCommandOutput)\r\n        .then(this.newCycle);\r\n  }\r\n\r\n  private startLoop(): void {\r\n    Promise.resolve()\r\n      .then(this.newCycle)\r\n      .catch(reason => {\r\n        console.log(reason);\r\n      });\r\n  }\r\n\r\n  public stop() : void {\r\n    this._stopToken = true;\r\n  }\r\n\r\n  public run() : void {\r\n    // Запускает в режиме командной строки\r\n    this.view.write(`<b><i>Welcome!</i><b>`);\r\n    this.startLoop();\r\n  }\r\n\r\n  public getInfo(command: string) : CommandInfo | undefined {\r\n    return this.commandManager.getInfo(command);\r\n  }\r\n  public getAllCommandsInfo() : Array<CommandInfo | undefined> {\r\n    const list = this.commandManager.getCommandsList();\r\n    return list.map(name => this.commandManager.getInfo(name));\r\n  }\r\n}\r\n\r\nexport { ITerminal, Terminal }","type eventHandler = (args: any) => void;\r\n\r\nexport default abstract class EventEmitter {\r\n\r\n  private _map = new Map<string, Array<eventHandler> >();\r\n\r\n  public on(eventName: string, handler: eventHandler) : void {\r\n\r\n    const arrayOfHandlers = this._map.get(eventName);\r\n\r\n    if (arrayOfHandlers) {\r\n      arrayOfHandlers.push(handler);\r\n    } else {\r\n      const newArray = [ handler ];\r\n      this._map.set(eventName, newArray);\r\n    }\r\n  }\r\n\r\n  public off(eventName: string, handler: eventHandler) : void {\r\n\r\n    const arrayOfHandlers = this._map.get(eventName);\r\n    if (!arrayOfHandlers) return;\r\n\r\n    const index = arrayOfHandlers.indexOf(handler);\r\n    if (index === -1) return;\r\n\r\n    arrayOfHandlers.splice(index, 1);\r\n    if (arrayOfHandlers.length === 0) {\r\n      this._map.delete(eventName);\r\n    }\r\n  }\r\n\r\n  public emit(eventName: string, args: any): void {\r\n\r\n    const arrayOfHandlers = this._map.get(eventName);\r\n\r\n    if (!arrayOfHandlers || arrayOfHandlers.length === 0) return;\r\n    \r\n    arrayOfHandlers.forEach(handler => {\r\n      setTimeout(() => {\r\n        handler(args);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n}","import EventEmitter from '../lib/EventEmitter';\r\n\r\nexport default class Line extends EventEmitter {\r\n\r\n  protected _element : HTMLDivElement;\r\n  protected _textField: HTMLDivElement;\r\n\r\n  constructor() {\r\n    super();\r\n    this._element = document.createElement('div');\r\n    this._element.classList.add('line');\r\n    this._textField = document.createElement('div');\r\n    this._textField.classList.add('line-content');\r\n    this._element.appendChild(this._textField);\r\n  }\r\n\r\n  public setContent(html: string) {\r\n    this._textField.innerHTML = html;\r\n  }\r\n  public get element() {\r\n    return this._element;\r\n  }\r\n}","import Line from './Line';\r\n\r\nexport default class InputLine extends Line {\r\n\r\n  private _input: HTMLInputElement;\r\n  public invitation: string = '>';\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    const $invitation = document.createElement('div');\r\n    $invitation.textContent = this.invitation;\r\n    this._element.insertBefore($invitation, this._textField);\r\n\r\n    const $input = document.createElement('input');\r\n    $input.type = 'text';\r\n    this._element.insertBefore($input, this._textField);\r\n\r\n    this._input = $input;\r\n\r\n    this._textField.classList.add('hidden');\r\n\r\n    this.handleKeys = this.handleKeys.bind(this);\r\n    window.addEventListener('keydown', this.handleKeys);\r\n  }\r\n\r\n  public get input() : HTMLInputElement {\r\n    return this._input;\r\n  }\r\n\r\n  private handleKeys(event : KeyboardEvent) {\r\n\r\n    enum Keys { ENTER = 13 };\r\n\r\n    if (event.keyCode === Keys.ENTER && this._input === document.activeElement) {\r\n\r\n      this.commit();\r\n    }\r\n  }\r\n\r\n  public commit() {\r\n    const value = this._input.value;\r\n    this._textField.innerHTML = this.decorateText(value);\r\n    this._textField.classList.remove('hidden');\r\n    this._input.classList.add('hidden');\r\n    window.removeEventListener('keydown', this.handleKeys);\r\n    this.emit('commit', value);\r\n  }\r\n\r\n  public setContent(html: string) {\r\n    this._input.value = html;\r\n  }\r\n\r\n  public focus() : void {\r\n      this._input.focus();\r\n  }\r\n\r\n  private decorateText(sourceStr: string): string {\r\n    return sourceStr; // Пока так.\r\n  }\r\n}","export default class InputSaver {\r\n\r\n  private _store: string[] = [];\r\n  private _cursor: number = -1;\r\n  private _limit: number = 10;\r\n\r\n  public push(input: string) : void {\r\n    this._store.unshift(input);\r\n    \r\n    if (this._store.length >= this._limit) {\r\n      this._store.pop();\r\n    }\r\n    this._cursor = -1;\r\n  }\r\n\r\n  public getAll() {\r\n    return this._store.slice(0);\r\n  }\r\n\r\n  public getNext() {\r\n    if (this._store.length === 0) {\r\n      return '';\r\n    }\r\n    else {\r\n      return (this._cursor < this._store.length - 1)\r\n        ? this._store[++this._cursor]\r\n        : this._store[this._cursor];\r\n    }\r\n  }\r\n\r\n  public getPrevious() {\r\n    if (this._cursor === 0) {\r\n      this._cursor = -1;\r\n      return '';\r\n    } else {\r\n      return (this._cursor > - 1)\r\n        ? this._store[--this._cursor]\r\n        : '';\r\n    }\r\n  }\r\n\r\n  public setLimit(limit: number) {\r\n    this._limit = limit;\r\n    if (this._store.length > limit) {\r\n      this._store.splice(this._store.length, limit - this._store.length);\r\n    }\r\n    this._cursor = -1;\r\n  }\r\n}","import Line from './Line';\r\nimport InputLine from './InputLine';\r\nimport InputSaver from '../lib/InputSaver';\r\n\r\ninterface ITerminalView {\r\n  read: () => Promise<string>;\r\n  write: (content: string) => void;\r\n  clear: () => void;\r\n  block: () => void;\r\n  unblock: () => void;\r\n}\r\n\r\nclass TerminalView implements ITerminalView {\r\n  private screen: Element;\r\n  private activeLine ?: InputLine;\r\n  private InputSaver = new InputSaver();\r\n\r\n  constructor(screenSelector: string) {\r\n    const screen = document.querySelector(screenSelector);\r\n    if (screen !== null) this.screen = screen;\r\n    else throw new Error('invalid selector for console screen');\r\n\r\n    this.screen.addEventListener('click', this.handleClick.bind(this));\r\n    window.addEventListener('keydown', this.handleKeys.bind(this));\r\n  }\r\n\r\n  public read() {\r\n\r\n    return new Promise<string>((resolve) => {\r\n      const line = new InputLine();\r\n      this.screen.appendChild(line.element);\r\n      this.activeLine = line;\r\n      this.activeLine.focus();\r\n\r\n      line.on('commit', resolve);\r\n    })\r\n    .then(input => {\r\n      this.InputSaver.push(input);\r\n      return Promise.resolve(input);\r\n    });\r\n  }\r\n  \r\n  public write(html: string) : void {\r\n\r\n    const line = new Line();\r\n    line.setContent(html);\r\n    this.screen.appendChild(line.element);\r\n  }\r\n\r\n  public clear() : void {\r\n\r\n    while (this.screen.firstChild) {\r\n      const child = this.screen.firstChild;\r\n      if (this.activeLine && child === this.activeLine.input) {\r\n        break;\r\n      }\r\n      this.screen.removeChild(this.screen.firstChild);\r\n    }\r\n  }\r\n\r\n  public block() : void {\r\n    console.log('TerminalView.block() not implemented!')\r\n  }\r\n\r\n  public unblock() : void {\r\n    console.log('TerminalView.unblock() not implemented!')\r\n  }\r\n\r\n  private handleKeys(event : KeyboardEvent) : void {\r\n\r\n    enum Keys { UP = 38, DOWN = 40 };\r\n\r\n    if (this.activeLine) {\r\n      // Input specific actions\r\n      if (event.keyCode === Keys.UP || event.keyCode === Keys.DOWN) {\r\n        const toDisplay = (event.keyCode === Keys.UP)\r\n          ? this.InputSaver.getNext()\r\n          : this.InputSaver.getPrevious();\r\n        this.activeLine.setContent(toDisplay);\r\n      }\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  private handleClick(event : Event) : void {\r\n    if (event instanceof MouseEvent) {\r\n      if (this.activeLine) this.activeLine.focus();\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport { TerminalView, ITerminalView };","import { CommandDefinition } from \"./Command\";\r\n\r\nconst allowedMethods = ['get', 'delete'];\r\nconst allowedContentTypes = [ /text\\//, /application\\/json/ ];\r\n\r\nexport const http: CommandDefinition = {\r\n  text: 'http',\r\n  aliases: 'req',\r\n  flags: [\r\n    {\r\n      name: 'window',\r\n      aliases: ['w'],\r\n      type: 'boolean',\r\n      info: 'Opens response in new browser window'\r\n    }\r\n  ],\r\n  validation: (ctx) => {\r\n\r\n    const method = ctx.params[0];\r\n    if (!method)\r\n      return {\r\n        result: false,\r\n        error: new Error('No method specified!')\r\n      };\r\n    else if (allowedMethods.indexOf(method) === -1)\r\n      return {\r\n        result: false,\r\n        error: new Error(`Invalid method: ${method}. Only ${allowedMethods.join(',')} are allowed`)\r\n      };\r\n\r\n    const url = ctx.params[1];\r\n    if (!url)\r\n      return {\r\n        result: false,\r\n        error: new Error('No url specified!')\r\n      }\r\n    else if (!isCorrectUrl(url))\r\n      return {\r\n        result: false,\r\n        error: new Error(`Incorrect url`)\r\n      };\r\n\r\n    if (ctx.params[2])\r\n      return {\r\n        result: false,\r\n        error: new Error(`Unknown argument ${ctx.params[2]}`)\r\n      }\r\n\r\n    return {\r\n      result: true,\r\n      processed: { url, method }\r\n    }\r\n  },\r\n  action: (ctx) => {\r\n    const init: RequestInit = {\r\n      method: ctx.processed.method,\r\n      mode: 'cors'\r\n    }\r\n\r\n    if (ctx.flags['window']) {\r\n      window.open(ctx.processed.url, '_blank');\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return fetch(ctx.processed.url, init)\r\n      .then(response => {\r\n        const contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n          ctx.caller.view.write('\"Content-Type\" header not found');\r\n          return Promise.resolve('');\r\n        } else if (!isAllowedContentType(contentType)) {\r\n          ctx.caller.view.write(`Content type \"${contentType}\" is not supported`);\r\n          return Promise.resolve('');\r\n        } else {\r\n          ctx.caller.view.write(`Content-Type: \"${contentType}\"`);\r\n          return response.text()\r\n        }\r\n\r\n      })\r\n      .then(data => {\r\n          if (typeof data === 'string')\r\n            ctx.caller.view.write(data);\r\n      })\r\n      .catch(err => {\r\n        ctx.caller.view.write(err.message);\r\n      })\r\n  }\r\n}\r\n\r\nfunction isCorrectUrl(url: string) : boolean {\r\n  const pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|'+ // domain name\r\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n  '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n  return pattern.test(url);\r\n}\r\n\r\nfunction isAllowedContentType(contentType: string) : boolean {\r\n  for(let pattern of allowedContentTypes) {\r\n    if (pattern.test(contentType)) return true;\r\n  }\r\n  return false;\r\n}","import { CommandDefinition } from './Command';\r\nimport { http } from './http';\r\n\r\nexport const commands: CommandDefinition[] = [\r\n  {\r\n    text: 'clear',\r\n    action: (ctx) => {\r\n      ctx.caller.view.clear();\r\n      return Promise.resolve();\r\n    },\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 0;\r\n    },\r\n    aliases: 'cls',\r\n    info: 'Clears terminal screen'\r\n  },\r\n\r\n  {\r\n    text: 'exit',\r\n    action: (ctx) => {\r\n      ctx.caller.stop();\r\n      return Promise.resolve();\r\n    },\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 0;\r\n    },\r\n    info: 'Shuts down terminal'\r\n  },\r\n\r\n  {\r\n    text: 'info',\r\n    validation: (ctx) => {\r\n      if (ctx.params.length === 0) return {\r\n        result: true,\r\n        processed: ctx.caller.getAllCommandsInfo()\r\n      }\r\n      if (ctx.params.length === 1) return {\r\n        result: true,\r\n        processed: ctx.caller.getInfo(ctx.params[0])\r\n      }\r\n      return false;\r\n    },\r\n    action: (ctx) => {\r\n      if (ctx.processed === undefined) {\r\n        ctx.caller.view.write(`Command ${ctx.params[0]} not found`);\r\n      } else if (ctx.processed instanceof Array) {\r\n        ctx.processed.forEach(info => {\r\n          ctx.caller.view.write(`${info.name} : ${info.info}`);\r\n        })\r\n      } else {\r\n        ctx.caller.view.write(`${ctx.processed.name} : ${ctx.processed.info }`);\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n  },\r\n  http\r\n]","import './main.scss';\r\nimport { Terminal } from './ts/terminal/Terminal';\r\nimport { TerminalView } from './ts/views/TerminalView';\r\nimport { commands } from './ts/terminal/Commands';\r\n\r\nconst terminal = new Terminal(new TerminalView('.screen'), commands);\r\n\r\nterminal.run();","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}