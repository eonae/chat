{"version":3,"sources":["ts/lib/EventEmitter.ts","ts/lib/base/Command.ts","ts/lib/base/CommandManager.ts","ts/lib/base/BaseIOEntity.ts","ts/lib/base/CommandTrigger.ts","ts/lib/util.ts","ts/apps/chat/ChatClient.ts","ts/views/Line.ts","ts/views/InputLine.ts","ts/lib/InputSaver.ts","ts/views/Terminal.ts","ts/lib/base/defaultCommands.ts","ts/apps/chat/commands.ts","main.ts","../../../../../Users/Sergey/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../../Users/Sergey/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":"AcAA,ACAA,IDAIA,ACAAY,MAAM,GDAG,ACAAC,CFAb,ECAgB,IAAhB,ACAoB,CAAC,cAAD,CAApB;AFCA;ACAA,ACCA,AFAA,SCDSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,AFAF,MCDM,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,IAAAA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AJHJ,ANFA,IUKIA,IAAI,CAACI,AJHO,ANFA,IAAhB,CAAqB,CUKjB,CJHJ,CAAwB,ENFxB,EMEA,ANFiC,EMEK,INFtC,EAA8D,CME9D,EAAkE;AGIhE,ACAC,AJHD,ANFA,GUGA,GVHI,EAAE,CSKCnB,AHHA,KNFK,ISKZ,QTLwB,KAApB,CAAJ,EAAgC,MAAM,GAAG,CAAE,MAAF,CAAT;ASMjC,AHHG,ANFF,EAAA,EMEE,IAAI,ANFA,CAAC,CMEC,IADD,ENDP,CAAe,UAAA,MAAM,EAAG;AUKxBgB,AJFE,ANFA,EUIFA,EJFE,ANFA,IMEI,CIEC,AVJA,CUICI,AJFA,ANFA,IUIR,EVJc,CUICL,AVJA,IUII,AVJZ,CUIaK,AVJlB,GAAqB,CUIR,CAAUC,IVJI,CUId,AVJe,CUIC,GAAhB,AVJQ,CAAY,CUIC,CAArB,GVJQ,CUIkB,AVJvC,GUIa,GAAgCC,IAAI,CAACC,GAAL,EAA/C,4BJJO;AGMT,ACDER,AJFE,ANFD,EUIDA,CVNA,CMIE,EIEE,CAACS,EDCEtB,EHHE,EAAP,IIEF,CAAgBuB,EJLT,CGMT,GAAwB,MCDtB,CAA6BT,OAA7B,EAAsCD,IAAI,CAACW,WAA3C;ADEA,ACDD,AJFG,ANFH,IMEG,UAAU,EAAE,oBAAC,GAAD,EAAQ;AGItB,AFTF,ADMM,ICNN,AZA8B,ASFT,ALAA,EUWf,IHHI,GAAG,CAAC,MAAJ,CCNV,ADMqB,GCNrB,GDMU,ICNV,CAAA,ADMgC,CAA1B,EAA6B,OAAO,sBCN1C,CAAA;AEUI,ACDJ,AJFQ,ANTR,IUWIC,AFNJ,GRLA,CMSQ,ANTR,ESYU,ETZV,ESYcxB,ACDA,AJFA,CNTd,CMSgB,CIEC,EDCP,ATZV,CMQ0C,CGItC,ACDJ;ADEG,ADPH,ADHA,ADOQ,GGCN,CAEE,AFVJ,AXAqB,IUOb,GGGGC,GAAP,EAAY,CHHC,EAAE,CCPnB,EDOsB,CCPtB,ADOuB,MAAJ,CAAW,QCP9B,CAAA,OAAA,CAAA,CDOmB,8BCPnB,CAAA,CAAA;AEWI,ACFJ,AFJA,AbNA,ASFA,ALAA,AOQ0C,AND1C,OMCmC,CGM3BC,CCFCuB,AVLO,MSOD,CTPf,CAAwB,CSON,ACFlB,CDEmB,CTPnB,CUKqB,CVLW,ESORxB,ALdxB,ETEA,CcY2B,CAACE,AVd5B,KUckB,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,AFJF,ADJa,AZHb,ASFA,ALAA,AOYM,ANJJ,MUKIoB,CHRO,CAAA,CPGJ,CMIC,ENJE,CMIC,CAAC,EICZ,AHRW,EGQK,CHR2B,CAC3C,ADMQ,CAAW,GNJG,GMId,ENJR,GMI8B,CAA1B,EAA6B,OAAO;AGGtC,ACDA,AHPA,AXOF,AUDM,ANJP,EOFG,IAAI,EEQAtB,AFRE,ADMF,MAAM,CGEV,CHFY,CGEC,AFTf,EXQY,CUF4B,EVExC,EAAoC,MAApC,EAAwD;AaEpD,ACDH,AFJH,ADHI,AZJM,ASFA,ARYgD,ACd1D,AEES,AOYD,ADdR,EEQI,EVRJ,AQAA,GGWA,CAAA,AFGQ,CCNG,AZJD,ASFA,ALAD,CMFT,CEQa,EEQAG,AdZH,AEJV,AQAA,EDEU,CGIR,AZFe,AEJjB,AEES,COYQ,CFZY,CLAF,AOYR,CXVE,ASFX,CISV,ATTS,CSST,AFGsB,CGEC,AdZN,AWUM,CGECH,CdZd,GUJV,CCcmB,ADdnB,CCc8B,CGEC,AZhB/B,CYgBgC,AZhBhC,CYgB+B,CAAR,CAAjB,CJhBN,CCcmB,ADdnB,CCcsC,CTdtC,CAAA,CScyC,CAAC,GDd1C,CAAA,CAAA,CCcsC,CAAW,CAAX,CTdtC,AScmB,CTdnB,CAAA;AYiBK,AFRD,AZqCH,AS3CS,ALAD,AOSiC,ANL1C,EOEI,IAAI,CDG2B,ANLnC,COEU,APFV,CIJU,ALAD,MCIT,CIJU,ELAD,ACIT,CIJ4B,CAAC,CAAnB,ALAqB,EAAtB,ECIT,QODE;AEYC,ACDDsB,AFLF,ADFI,AHNM,ARUgD,AGVjD,AOYH,ADfN,EKgBEA,AHPE,ECEJ,AXPqB,AQJrB,KDGU,ALAD,GWaG,AHPE,CDMD,CCNG,ARNP,CWaME,ANbL,ACHV,CGWA,CTR2B,CKAA,AEYrB,ADfN,CGWA,ATRS,CKAC,KMae,CAAC,OLhB1B,CGWA,ADFiB,AFTjB,CGWA,EDFgB,CGOsB,CHPd,EFTxB,CGWA,AHXA,CGWA,YHXA,CAAA,CAAA,aGWA,CAAA,CAAA;AEMI,AHPE,AHqCL,ALjBA,AOdI,KAdI,GIeDC,GHPK,EGOA,CHPG,CAAC,CGODC,KHPH,CAAW,EGOA,CAACC,GHPZ,KAAsB,CAA7B,OGOU,CAA0B,wBAA1B,CAAZ;ADEF,ADPF,ADDK,AXHc,AUSf,ADhBJ,GEIE,CCOF,AFKI,ADhBJ,KIkBS,AbXU,CUST,EGER,AHFU,EELZ,CZJmB,CSPnB,CGWA,CZJoC,CSPpC,CTOmB,QUSN,GAAD,CELZ,CAAA,AFKoB,CDhBpB,CAAA,KGWA,CAAA,CHXA,CAAA,mBGWA,AHXA,CGWA,AHXA,CGWA,AHXA;AImBC,ACFG,AHNA,AXEA,ACVJ,AScM,ECNF,MAAM,CGMD,AdJA,CWFG,ADMF,GIAGC,AdJT,AUIS,CIAC,AJAA,EVJE,CcIC,CAAb,CdJe,CcICA,AdJA,CcIC,EfbT,AWaF,CIAcH,AdJpB,EWFS,EVRb,ASc4B,CIAC,AHNjB,CGMkBI,CHNV,GZPW,Eea3B,CJAE,CIAgCD,CAAC,AJAA,EIAnC,EAAuC,AfbS;Aec9C,AFNN,ADAM,AZNF,ACQA,ACXJ,ASeQ,ADhBR,IGUA,AHVA,IEUY,ADMJ,CVJC,CcICrB,AfZA,AUJV,CCgBW,CAAC,CDhBZ,CGUA,ADAkB,EGMF,AdJZ,CcIaJ,AFNjB,ADAsB,CDMd,CVJW,AUIA,CCNM,AFVzB,CEU0B,AFV1B,CTYsB,AUId,CVJe,CYFvB,CAAA,AbNyB,EeYf,AHNY,CGMMsB,AHNoB,AZNpB,CCQxB,IcI6B,AfZA,CeYCG,AHN5B,AFVN,CKgBiC,ALhBjC,CKgB4B,CAASb,AfZT,AUF5B,CVEsC,GeY5B,AfZkB,AWYM,CXZQ,EWYL,CAAC,EIASR,GFN/C,CAAA,AbN4B,AWYM,CXZ9B,AWYyC,CIAQ,AJAnB,CIAoBV,AJA9C,YIAuC,EAAzC,EAAgE;ADGtE,ACFQY,AHNF,AXEF,AUIG,ADbP,OCWM,CIEEA,AHNI,CEQHN,AbNA,IUII,CCNK,GAAI,ADML,CIAC,CDElB,ACFmBsB,CDECrB,AbNhB,AUIgB,CAAC,EGErB,AFRqB,AXEE,CcIC,CDEC,ACFAwB,ANfX,CMeU,AHNQ,AXEN,CcIR,AdJS,CcInB,AXfgB,EOeP,EFfU,ILAW,CQSjB,AXEjB,GWF0C,EDMJ,KAA7B,EAAoC,KCN3C;AESJ,ACFK,AFNP,ADAM,AZNF,ASHA,ARWA,ACXM,AEAN,AOeI,IENF,ADAA,GAAG,CCAC,ADAA,ADMF,CGEC,AbNA,ACXC,CYiBA,AddF,AIHE,CSSG,AJTJ,AEeE,CAAC,CTfF,CUSJ,CEQSxB,ADRE,ADAA,CXEb,ACXa,COAb,ALAa,CUiBR,AFRH,AHTU,CRWG,CaMCC,AZjBC,AEAD,COeZ,CAAc,CTfL,CEAO,CSSP,AbNb,ASHA,ARWA,ACXM,CWSO,AJTO,CKiBf,AddgB,CccG,CHFpB,CAAsB,CFf1B,EISS,CAAa,ITTN,EAAhB,AOe0B,GENjB,CAAb,AFMkC,EAAG,KCNS,MAAxC,yCEQG,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,AFNL,ADAM,AZNA,ACSF,ACqCH,AEjDG,AOeM,IENJ,IAAI,AbNJ,CCSG,CGZC,AOeA,CENG,ADAA,EXGT,AGZS,AOeA,CAAC,CENG,CZGA,AGZD,EQSI,CAAC,AXGD,CAAC,AUGX,CAAW,CPfC,CJGD,AIHE,CJGD,ACSN,AUGN,ECNG,CCAI,AZGY,AGZb,CSSC,ADAX,AZNA,CAAqB,CCSK,AGZF,CHYG,IYHpB,AZGG,AGZA,AOeY,CENA,AbNtB,AIH8B,EHYI,CGZxB,AOegB,CPf5B,AOe6B,IAAvB,EENkB,CAAA,QAAf,EAAyB,GFMK,IVHvC,AUG2C,CAAC,IAAtC,SENG,CAAb;AAEA,ADDK,AZNA,ASHD,ALAA,AOeK,IELL,AHTiB,CGShB,CTVD,CJCA,EWYI,CFbA,GIUR,AbPW,AIHA,CSUG,ATVF,CKAC,GIUb,GJVQ,ALAJ,CKAgB,ELAE,GAAG,CKAjB,ALAkB,CAAD,CAArB,EKA0B,KAAK,MAA/B,EAAuC;AKkB3CC,ACFIgB,AFLJ,ADdE,AZOI,ASHA,ARYF,AGZA,AOeG,CCpBsC,EAgB3C,CGIEA,AFLA,CAAC,CTVD,CUiBG,AHNM,CGMLzB,ADPR,AZEQ,CGZD,CAAC,CHYG,CDTC,ACSA,CQZD,AEeE,CIAC,EXfV,CWea,AXfF,CAAX,CKAE,ARYF,CaKJ,AddoB,ASHF,ALAA,CWed,AdHiB,AGZjB,EUiBmBD,AddA,ASHjB,CTGmB,OAAF,CAAjB,SccN;AACAU,ACFG,AT1BH,AMsBI,AHXC,ANXL,AFuBM,AGZF,AOeI,AH1BR,ADAA,EKsBI,CGLqB,CTjBzB,AHAA,AKAA,ADAA,CQ0BK,CHJG,ARXJ,CUiBG,ACXkB,CDWjBH,ACXN,AHKQ,ADIF,EH1BR,CPuBW,AUGA,CAAC,CPfD,AIXX,CJWY,IUiBZ,AR5BA,AMqBE,ATrBF,AQ0BQ,AJ1BR,CNuBM,AGZF,AOee,EGEEA,AR5BrB,AHAA,AIAA,CNuBuB,AGZH,AOeZ,MH1BR,CPuB8B,AOvB9B,EM4BA,CbLiC,CAAC,AUGR,GL1B1B,AHAA,ACWkC,AOeL,AH1B7B,ADAA,CDAA,AHAA,ACWmC,AOeL,AH1B9B,ADAA,GNuBuB,IKvBvB,AHAA,AIAA,CDAA,AHAA,AFuB8C,AOvB9C,ADAA,CI0B0B,AH1B1B,CG0BwC,AH1BxC,CJWoB,CAA2B,EOevC,CPf0C,CHY5B,AGZ6B,GHYO,CAAC,EGZZ,CHYe,AGZJ,CHYK,CEvB/D,CAAA,CAAA,EIAA,CI0BkD,AJ1BlD,CNuB0D,AMvB1D,CNuBsB,CGZoC,AOeL,CAAC,CVHoB,EKvB1E,AFW8D,CEX9D,ALuB6E,CKvB7E,ALuB8E,IUG5B,CAAc,EVH1D,EUGE;AICP,AHJG,AZTE,ACUD,AGbyD,AOgBvD,ADVL,EEME,GXDA,IWCO,EAAE,AXCF,EDVA,EIHuD,EQUhE,AZPI,CAAU,EUGF,CVHR,CAAc,MELH,CEE+D,CAAC,CJG3E,EAAyB,CUG7B,ENNgE,AMM9B,CNNoD,IJGlF,AEL8B,AEE8B,CAAJ;AET9D,AMsBI,AZTC,ASHD,ANXJ,AFwBM,ACdF,AEA0D,AMM1B,EEOhC,ENtBJ,AHDA,AKCqB,ADAA,EKsBb,CRbuC,CQarC,ARbU,CAAhB,CFAM,COCD,ARaE,ECdE,GAAG,EOCZ,CRaE,CKvBN,AHDA,CMWmB,APDE,COCD,ARaE,CKvBtB,AGUI,ANXJ,CFwBM,CCdU,CAAU,GAAV,CAAc,MUU5B,ENnBF,AHDA,CGCA,AHDA,EDUgB,CAAZ,IITJ,AHDA,CGCA,AHDA,kBAAA,CAAA,CAAA,WGCA,CAAA,CAAA;AS2BA2B,AHJI,AZTD,ASHA,ARaE,AGdD,AOgBE,ECHF,IGIE,AXjBF,CWiBGxB,KHJO,CRbH,AOgBE,CICb,AHJgB,ARbJ,GWiBKiB,GJDG,CAAC,EPhBjB,GWiBJ,AXjBwB,EOgBX,CPhBc,CAAC,AOgBtB,ICHW,ERbO,CQaR,ARbmB,EQaX,QRbW,IAAI;AETvC,AMuBM,AVdF,AEAmC,AOiBlC,ADfK,IJXV,AHE8B,KOSpB,CJXV,CMuBa,ENvBb,AJSY,CUcI,CAAC,ARd0B,CFAhC,AEAiC,GFCpC,AQCE,CJXV,CAAA,AMuBa,CAAW,AFZD,IAAI,EEYd,ERd6C,CAAC,EQcxB,CAA7B,GNvBN,AFS4C,CET5C,AFSkE,AMEvC,CAAA,GNFiB,CAAL,GMEhB,EAAb;AEaL,AXCD,ACdI,AEF+B,AOT9B,ADeL,GEGF,ADlBA,IPSsB,CHgBhB,ACdA,AEFJ,AMMM,GTUC,CAAC,ACdA,EAAE,AQIE,GTUZ,ACda,AQIE,CRJD,CDcC,GCfX,GQKmB,CAAC,aAAT,CAAuB,cAAvB,CAAf;AEUA,AXCE,ACdE,AEDJ,AOiBH,ADZG,EESA,ENtBiB,ELuBf,EWDI,AVbF,AQIA,CTUC,CWDG,AXCF,GGfC,CMKG,CTUR,ACdS,CDcC,CCdC,EQIE,CRJC,AEDhB,CFCiB,EDcf,ASVF,CVDS,ACWW,CSVC,CESZ,EVfL,CUeI,AHbG,CCIe,CESV,GXCI,CDXQ,ACWP,CSVA,CTUG,ESVW,KVDc,CUC5B,CAArB,KACK,MAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AESH,AZTF,ASJA,ARcI,ACdA,AEDL,AIRD,ADAA,AGeE,QEOQ,AVbJ,CQMC,CVFC,ECUE,ACdA,COAD,CGaO,AVbJ,CQMV,CAAY,CEOM,AVbL,COAD,APAE,AKThB,CNuBiB,CWDM,AXCb,CWDc,CVhBlB,CMNN,CCSS,CTIc,ASJF,ARcE,EWDH,CAA0B,AZTpB,ESJjB,CAAkB,CAAlB,ACMP,CVF6B,ASJ7B,ARcI,ASRyB,CEO3B,CXC6B,EDVP,CAAU,EUElC,CVFwB,CAAc,AUEA,KAAK,IVFnB,CAAxB,MUEsC,CAAiB,IAAjB,CAAsB,IAAtB,CAAtC;ADLD,ARcO,ACdF,ASfR,AHKE,ADAA,AGgBE,IAAA,GCrBJ,CTeQ,ASfR,EV6BU,ASRA,CAAC,ERNE,EDcC,ACdC,ASff,CV6Be,ECdG,ASflB,CTemB,GDcT,CAAY,EU7BtB,EV6BU,ASRN,CTQuB,ASRC,SAAxB,EAAmC,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAnC;AEOE,AZTF,AGTF,AFmB2B,AClBrB,AQYJ,IAAA,GRbO,CUkBD,EZTF,AEFA,AQMJ,CVJK,AUIL,CTMyB,EWDvB,CFLF,CEKc,AXCe,ASNxB,ETM0B,CAAR,ACnBvB,CQaA,EAAW,CAAE,CPbH,EHSV,EAAsB,AUIJ,IPbpB,AOaa,EPb4B,AOaf,KAAK,KAAlB,EAAyB,KAAK,KAA9B,CAAX;AEMI,AZRJ,AGXuC,AFmBL,ACXnC,ASYH,AHzBE,ADAA,AGmBC,MEKK,GAAG,ADCK,CCDJ,AZRF,ECQ4B,GDRvB,CYQP,AXAkC,CWAvB,ADCnB,CXTkB,ACQ0B,AUCnB,ECDjB,CAAe,CDCvB,EAAuC,GPff,IOexB,EXTiC,AWSkC,CXTjC,AING,OJMnB,ACQS,CDRe,OYQlC,AZRU,CAAd;AYSI,AZRJ,ACOiE,AGbjE,AOeF,SAAO,CXTD,ECO6D,CWCtD,ARdJ,EJME,ICO+D,CWCtD,AZRJ,CYQK,AZRJ,ACO2D,CDP1E,CCOuB,CDPL,AINA,IQcP,ARdJ,CAAgB,CQcnB,AHbQ,ILDL,CAAP;AQeG,AZPH,ASNA,ANRuC,AFmBuC,AGZ/E,AOeC,AH1BA,ADAA,II0BA,CCJE,CZJF,EWQI,EFdA,AEcE,CCAC,CXHuE,EUEzE,CFbI,CRWyE,EAAE,GDLrE,ASNX,CTMY,ASNA,MTMhB,ASNI,CTMmB,ISNI,CTM3B,ASNA,ETM8B,ASNA,CTM9B;AYSI,AHdF,ARUqB,AUIvB,AH9BK,ADIL,II0BA,MCAU,AJ9BL,ADIA,CNsBC,AUIC,EAAP,EFdS,CGcO,CHdd,CFZF,CK0BmB,CDFd,AH5BA,CDIW,CK0BM,CAAC,AJ9BG,GAArB,EFSQ,CMqBT,AL1BoB,CAAC,MDKK,EJQV,KKbJ,CAAuB,KAAvB,CAAhB;ADMA,AMqBI,AZTJ,ASLC,ANTD,AFmBK,ACTL,ASaA,AH1BA,IG0BA,GFhBA,CEgBI,AH1BE,CPoBF,CWMM,AZTN,AWSE,CLrBD,CMqBO,CHbP,APAE,EUaQ,AXJJ,GKjBX,AJQY,CUaO,AVZhB,AMdc,EFKF,CELK,CNab,CACC,CFGW,CAAC,CMZpB,CMqBe,CAAc,AVZhB,AQIC,CFlBc,CAAC,CRiBzB,CEHI,CAAU,ASSb,ADL0B,CEQI,CAAC,CZTL,CAA/B,CYSe,CAAX,AZT8B,AEH1B,EADD,EAEJ,AMfiB,CAAuB,KNapC,AMba,CNeV,AMfV,UNeW,KAAD,EAAQ,KAAR,EAAe,IAAf;AITX,AMqBK,AZTF,ASJA,ANfM,AFwBF,ACRI,ASYV,AH1BA,ADDA,AGmBA,ICQA,AH1BA,EI0BI,GAAG,CAAC,AT5BA,AFwBF,AMvBD,AGmBD,GVDG,CWSG,CFbA,ARSA,ACRwB,AMdvB,AEkBF,CEQL,AXJO,AUIC,AH1BA,CI0BG,AZTb,CAAU,AOlBZ,CLesC,AKfxB,CK2BV,AHbW,APCwB,CUYpB,CXJb,CAAY,CDLhB,AGnBM,CHmBW,AUCnB,EDLU,ANfe,AFwBnB,ACR4B,AMdlC,AEkBqB,CTIE,ACRwB,AKf/C,CNuBM,AMvBkB,CEcC,ADbC,CLFG,CCYJ,AGXzB,AGmB0B,CRJQ,AKfN,CPkB1B,CSJ4B,CGa1B,ADAS,AH1BkB,GNc2B,AEJlB,AOgB5B,AJ3BZ,CGmBqB,CDLI,AEaL,CFbiB,EPC3B,EMdV,CLF6B,CMeJ,ANfI,GMeiB,CAArC,GACH,ANhBmB,EAAjB,GMgBG,MAAL,CAAY,EAAE,KAAK,OAAnB,CADG,GAEH,KAAK,MAAL,CAAY,KAAK,OAAjB,CAFJ;AGcE,AZTH,ASFA,ANjBO,AFwBH,ACTK,AEHV,AOgBE,ADRF,MAAA,CRPO,EAGJ,AQIA,CPpBK,ACYJ,AMQA,ERPG,CUeI,AVZJ,ASYE,GPhBC,AOgBE,ADRZ,CEQe,ADAF,ADRF,ENRY,CDZf,CCYR,CMQgB,CPpBK,ADgBd,ASYE,CCAE,ADAS,CCAG,CFRvB,EPpBQ,EDgBM,ASYL,KCAc,ADAQ,CAA7B,MCA4B,EAAG;AAC3B,AZTP,ASFA,AROI,ACTW,AEHd,AOgBC,AH3BD,ADDA,AGoBA,KCEK,CPVL,AMQA,CTFE,CWUI,CFRH,CEQK,AJ3BH,ADDA,AGoBD,CEQK,ARhBJ,CAAC,GFGY,EUaZ,AFRN,CFnBA,AEmBY,CNRZ,AIXc,CI2BI,ARhBJ,AGZd,ELeyB,CAAC,AKfR,AGoBD,IRLH,CQKd,ENRc,CAAC,AIXf,ADD0B,CK4BH,AJ3BI,ADDA,CHYT,UIXlB,EAAwC,ADDtB,CAAuB,KCCI,ADD3B,CAAlB,SCCA;AI4BQ,AT1BR,AFsBC,ACVa,AEFZ,AOgBF,ADRA,ICQA,EDRA,CRTO,CAAP,CQSG,CEQK,AT1BH,AQ0BC,ADRF,ENRI,AOgBA,ICAM,ARhBF,CQgBG,AFRf,CAAY,CNRG,CAAC,CAAC,EMQA,CEQT,AT1BR,CS0BuB,AT1BH,ES0BZ,ARhBO,CAAS,AOgBf,ADRT,CNRe,CAAb,CADgB,AOiBV,CPhBoB,CEPb,AHHf,AQ0BgB,CR1Ba,QAA7B;AGIA,AMuBQ,AXJT,ACVA,AScG,AH3BF,ADFA,AGqBA,MCQE,EH3BI,CG2BD,CCAG,ADAF,AJ7BD,CDMA,AIeA,EEQM,CAAC,AJ3BA,EG2BV,CAAW,AH3BE,CFIf,EMuBQ,AL7BR,CDMe,AMuBI,ADAjB,AJ7Bc,AGqBhB,CCQkB,EDRA,CFnBK,CAAC,CEmBxB,ECQE,CLvBF,ACNA,CI6B2B,AJ7BD,EI6BxB,CJ7BF,CK6BQ,AL7BsB,CK6BI,GJ3BnB,CAAuB,OAAvB,CAAf,CDFA,GK6BkC,CAAA,OAAA,CAAe,OAAf,CAAuB,QAAvB,CAA1B;ANtBT,AMuBS,AT3BR,ACUE,AOiBA,AH3BF,AEmBD,IFnBC,MI2BQ,AT3BH,AKAC,CAAC,CLAP,ACUM,CQiBK,ADAF,CCAG,CT3BF,AKAV,CJUU,CAAC,CIVG,EI2BN,ADAQ,CCAG,AT3BJ,AQ2BE,ER3BP,ACUJ,CQiBE,AT3BU,ACUA,AIVlB,CI2BuB,AZVb,AIPJ,EAAe,CDVX,ACUJ,AOiBG,EAAP,IFZc,ALLY,EJOC,CIP3B,EAA+B,GJOK,GIPC,CAAC,GQiBhC,CRjByB,CAAY,IAAI,CAAC,GDVlD,GCU6C,CAAY,CAAZ,CAAZ,EAA/B,KACK,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,IAAI,CAAC,KAAL,CAAW,EAAX,CAAd,CAAT;AQiBC,AZTR,ASHA,ANnBuC,ACetC,AOgBA,AJ9BD,OHUA,GQoBQ,AZTF,ASHF,AFlBC,KEkBI,EGYM,CL9Bf,CAAc,GEkBV,GTGiB,ESHA,CTGG,ASHxB,EAAwB,AFlBxB,CAA0B,EPqBG,IAAL,AOrBO,CPqBG,GAAV,CAAc,KOrBtC,IPqBwB,CAAxB;AYUO,AHZL,ANhBH,ACYC,AOKK,AHjBL,GGiBF,MCMQ,CJvBD,GCgBE,ALJA,KIZP,CJYA,AIZc,CCgBZ,GAAe,CAAC,CAAhB,IPHY,EMbd,CAA2B,MAA3B,EAAmC,ENaa,IMbR,MNa8B,IMbtE;ARoBA,ASHE,APJoE,AEAvE,AOiBF,AJvCC,UP6BM,CAAC,ISHI,EAAP,OHtBa,CL4BZ,CDHC,IAAoB,CUAX,ETGQ,OAAe,KDHG,CAAC,MAAhB,KAA2B,CAAnD,EAAsD;AMxBtD,AMiCM,AZPN,ASJC,ARMD,AOvBA,ADHD,AGuBC,MVCA,CSPA,CGcM,EAAE,AJ5BH,AEoBD,CEQK,ENjCF,AGsBA,ECGE,CFpBT,EFLY,AMiCN,CJ5BQ,EI4BK,AZPJ,CAAC,GM1BhB,AEKA,AEoBA,EAAqB,EVCrB,CAAwB,GYOA,OZPA,OAAO,EAAG;AMzBnC,AMiCS,AZPN,ASJA,ARMF,ACXA,ASEJ,ADMM,MRRF,CSEJ,CXOM,AWPN,ECcY,AXLJ,GWKO,AFRJ,CEQK,CHXF,CEHd,CTFe,CFSC,AETA,CFSC,AWPjB,CCcY,AHXO,CGWI,EXLnB,ASHE,CEQM,AFRU,CEQK,AVhBvB,CAAoB,COKV,AEHd,ADMM,CAAoB,EDHG,CTIP,ASJS,CAAlB,ECGP,CDFI,CPNc,AQQU,GRRP,CUgBf,AHVG,CPNe,AQQS,IAAjC,CDFI,CAAY,EAAE,KAAK,OAAnB,CADG,GAEH,EAFJ;AGYK,AZPH,ASFH,APPC,AMZF,AEoBE,QRRA,CUcI,CZLF,AQrBC,GNYC,AQQC,CRRA,GFSI,CAAC,EQrBZ,CAAgB,CRqBL,AETT,CFSE,AETY,AQQd,CAAgB,ERRhB,CQQA,CPrBW,AOqBS,EFpBtB,CAA0B,GAA1B,CAA8B,AEoB5B,EPrB0B,AOqBG,KAAK,CFpBpC,IEoBE;AVEC,ASFJ,ANpBC,AFuBA,AUKJ,ADPM,SVDU,AWQA,CXRV,ACGE,GEvBG,AOqBA,GCOX,CAAwB,CR5BR,GQ4BhB,EAAsC,ADPhC,CAAgB,GAAhB,CAAoB,ECO1B,ER5BW,AQ4BuD,CR5BnC,EOqBzB,EAA6B,GPrBxB,CAA4B,COqBC,KAAlC,CPrBK,CAAP;AGEF,AM2BQ,AZNL,AGtBF,AFuBG,ACXA,ASgBJ,AH3BE,AEoBE,OVHF,CYUM,AXLJ,CUKG,CCAG,AJ3BH,CI2BI,CVhBD,CQSD,ERTI,GAAG,EUgBR,AJ3BN,CPsBe,CKtBL,AJWQ,CUgBG,AJ3BH,AEoBhB,CTEgB,ESFE,GTEG,AOtBA,CFAzB,CJWoB,AKhBF,CDKyB,AJWvB,CUgBG,EN3BvB,AIoBI,EJpBkD,ACLxB,CKgCF,CVhBZ,AMXI,CI2BW,AVhBH,AMXQ,EPsBhB,CAAmB,ACXvB,CMXI,CNWa,GDWb,CAAhB,ICXY,CAAZ,qBMXF;AFAoD,AM4B5C,AZNT,ACCE,AG5CL,AOiDI,AH3BA,ADLA,AGyBC,ICOD,AH3BA,GPoBA,AG1CJ,CH4CM,AG5CN,AOiDQ,ECAI,ADAF,AH3BA,CAAC,ADLF,EKgCM,CAAC,ADDP,CVJI,AG5Cb,GH4CM,AG5CN,EQiDY,AXLM,CWKK,ALhCnB,CAAgB,EKgCR,CAAe,EJ3BvB,CAAwB,EI2BI,CAAC,ALhC7B,CHjBJ,EGiBgC,CKgCpB,EJ3BR,CDLA,CCKmC,MAAK,UAAxC;AI4BO,AXLL,ACZA,ASiBF,AH3CF,ADWC,AGyBA,ICOC,ITjBE,CUeI,EDEC,ETjBD,ASiBN,CTjBO,CDYE,GCZP,CAAU,CSeP,EVHW,ACZd,CDYe,ACZD,GAAG,CAAC,EOQN,CRIL,CAAgB,ACZvB,EAAwB,CDYjB,CAAP,CQJyB,APRzB;AIZkD,AM8B/C,AHTL,ARIC,AUKD,AH5BD,IG4BC,GCbW,AXCyB,CWDhC,AXSJ,AUII,EAAE,CFTD,MAAL,GAAc,KAAd,MEMK,UR3BkB;ASgCpB,AThCoB,ADarB,ASkBF,IAAA,ITlBE,GAAG,CAAC,ESkBI,EAAE,GTlBV,CAAY,OAAZ,CAAoB,QSkBT,ETlBS,CSkBV,EAAQ,ETlBO;AIZ3B,AMgCC,AHXD,APT2B,ASmBzB,UFVE,GEUK,EFVA,CEUG,CTnBmB,ASmBlB,IFVT,CAAY,APTmB,CAAC,ASmB3B,CAAW,AJlCJ,GLee,AQWrB,CDFN,APTqC,ESmBhC,CFVgB,APTM,CAAc,GSmBd,CFV/B,AEUE,CTnB6B,COSC,CPToB,GAArB,CAAJ,yCIZrB,QAAN;AACA,AMFF,AHuBI,ANtBF,AF0BA,ACd2B,ASoB1B,AJlCD,AGyBU,CExC+B,EAoD3C,EDTO,ITdH,CIXG,AHDC,AF0BA,GKzBN,AGqBO,ARIE,AM5BF,CJEG,EGCC,ALyBC,CE1BC,CIFD,CDGZ,AGqBE,CAAY,ENtBI,IMsBhB,AFxBF,CEwBqB,KAAK,INtBb,CAAoB,CMsBZ,CAAY,MAA/B,EAAuC,KAAK,ANtBjC,EAAb,CMsBiD,KAAK,MAAL,CAAY,MAA3D;AHpBF,AMkCA,AZxDJ,AS2CK,ANtBD,AF0BE,ACdD,ASoBD,AJlCD,EKqCC,EDHA,ECGI,CZxDR,AE4BI,CU4BM,AZxDV,AC+CM,EKzBG,AK+BC,EL/BN,AK+BQ,CRhCD,CF0BC,CKzBE,ANtBd,CC+CM,CE1BS,CHrBf,AGqBgB,GGCG,AMiCjB,ATlCS,CAAS,AFyBJ,CKxBF,CAAQ,IAAR,AK+BD,EXrDb,CWqDY,AH1BS,CLND,CQgCA,GRhCI,EKMkB,qBFLtC;AACA,AMkCA,ATpCoB,AF2BlB,ACdH,ASoBG,AHzBF,AEgBA,EEYA,IDHE,EVNA,CWSK,ADHF,CL/BA,AK+BC,AHzBD,AEgBC,CEYG,EXTF,COnBP,AEgBU,CPxBc,AF2Bf,CUMP,CCCJ,ADDe,ADTA,IPxBe,AQiC1B,ADTe,CJtBjB,AHF6B,GGET,GLuBR,GKvBa,CIsBR,CAAA,GPxBO,CAAoB,GOwB/B,EAAb,CJtBoB,CAAkB,AHFd,CAA4B,GGEhC,CHFI,CAAJ,6BGEpB;AAJoD,AMuCpD,AHdA,ANvBoB,AF4BlB,AUMA,ADTF,EEYA,IAAI,CTrCG,CSqCD,ATrCN,AF4BE,GQLG,ACEA,ECSI,CVND,EAAE,CSHV,CDFA,ACEY,ECSI,CFXD,ARKA,AUME,CFXD,CAAhB,KREY,AUSH,CDTT,CCSE,ADTsB,IAAI,CAAC,MES/B,CFTE;AJtBD,AMmCC,AHdD,ANvBA,AF4BG,AUMD,AH3BD,AEkBA,EEYA,KJ9BA,CPqBE,GSHG,CEYK,EAAE,GXTD,AOrBN,EPqBQ,EOrBb,AEkBA,EFlBS,CEkBS,IAAlB,MEYa,GAAD,EAAQ;AAClB,AXdU,AUAP,AHjBO,AEmBZ,EHhD8B,CI8ChC,IVAE,COjBY,GI+BH,AFZJ,CFnBO,CAAA,CI+BA,CAAC,CL5DiB,CC6BlB,AD7BkB,CC6BlB,GI+BH,AFZT,CEYoB,AFZJ,GFnBJ,CAAA,CEmBZ,CEYS,CJ/BG,ENOH,AMPG,CAAA,CI+BmB,CAA7B,CJ/BU,KNOoB,EMPpB;AIgCX,AVxBD,ASqBH,AH7B2B,AEqBxB,GEKF,IJ1BE,EAAK,CNQC,AQaF,GRbK,AMRA,GNQG,CQaZ,CFrBK,AEqBe,GRbH,CMRR,GNQG,AMRH,CNQa,CMRb,CAAT,AEqBqB,CRbT,CAAc,KQaN,ERba,AQaD,CRbE,OAAtB,CAAZ;AUyBA,AXVA,AMpDJ,AGmDM,EEWF,KL9DJ,CK8DU,AL9DV,AGmDM,EEWM,AXVF,ESDA,CTCG,ASDF,EHnDX,AGmDM,CTCU,ASDF,EHnDd,GNoDqB,CMpDrB,EGmDM,EEWO,AFXW,GEWZ,EAAQ,CXVJ,CAAiB,ASD3B,EP5BkB,CF6BR,CAAZ,OE7B2C;ASwCzC,ATvCF,ADcA,ASOJ,AHhB4B,AEuBvB,OCPL,ADKI,CEaQ,ADlBZ,CDQK,IRfO,AQYR,CEac,AFVR,CCRV,CTPe,CUyBO,CDlBtB,ECkByB,CAAC,AVzBN,GQeV,CCRV,ECkBsB,CAA0B,CFVjC,CRfJ,CQeO,EJ3BK,AJaf,CUwBF,EVxBK,CAAC,IIbsB,AJa1B,CAAS,OAAO,CAAC,SAAjB,EAA4B,OAAO,CAAC,KAApC,CADG,GAEH,OAAO,CAAC,OAAR,CAAgB,IAAI,KAAJ,CAAU,mBAAV,CAAhB,CAFJ;AIXA,AMqCE,ATvCF,AF4BA,ACZD,AQaG,QEUI,AFVJ,CEUK,CNrCH,AL0BE,GE5BC,AO6BD,CAAC,CEUL,CNrCE,AL0BQ,CK1BR,AMqCW,CTvCH,CF4BI,CWWE,CAAC,GNrCf,AI2BF,CJ3BU,AI2BM,CTDK,CWWR,CAAW,CXXV,ASCd,CAAqB,CJ3BnB,AMqCW,CNrCf,AMqC8B,ATvCvB,CAAoB,CGEN,AL0BU,CSC7B,QP7BK,AF4BQ,CE5BuB,EF4BM,GAA7B,EE5BR,CAAP,AF4BkD,GAAG,CAAC,MAAtD,QWWe,EAAb,KACK;ANrCL,AMsCE,AHpER,AN4BG,AKKC,MImCI,CHpER,CAAA,EDiCQ,EImCM,CNtCH,AMsCI,EHpEf,ADiCa,CAAC,CFHR,CAAU,AMsCR,AHpER,CGoEqB,CAAb,EAAgB,CJnChB,EFHF,EAAmB,CG9BzB,ADiC0B,IAAI,CFHC,AEGA,CFHC,IEGxB,GFHF,CEGkC,GImChC,EJnCqC,MAAL,KAAgB,QAAQ,CAAC,aAA7D,EAA4E;AFF3E,AMsCE,AXbH,AOtBE,AEuBA,UTDE,CAAC,EOtBE,EEuBE,ETDT,EAAa,AOtBX,GEuBc,CAAC,OAAR,CAAgB,KAAhB,CAAP;AEaA,AXbA,AOtBD,AEuBA,OAND,EAOC,EEWQ,CXbD,CSLR,CAOM,GTFO,CWaG,CAAC,CXbA,ISEX,EEWG,CXbe,CWatB,CVzBa,AQcJ,CTFM,CSEH,GRduB,CDYL,SAAhB,GAA6B,IAAI,KAAJ,CAAU,qBAAV,CAA7B,GAAgE,GAAG,CAAC,KAAlF;AKzBF,AMuCC,AXbC,ACZF,AMVD,AEwBG,URdE,EQcE,CJ5BC,EL0BE,ACZA,EQcC,CAAC,CRdP,CIdU,AJcA,CIdC,CL0BC,CAAC,ACZb,CAAc,GChBT,ADgBY,CIdd,AJce,AQcpB,CJ5BqB,CL0Bd,ASEc,CTFE,CCZrB,CAAJ,EIdO,AJcsB,CId7B,AL0BS,CAAP;AKzBH,AMwBD,AT1BE,AF4BC,ACZC,AQcE,CExDqC,EAqE3C,OFbM,CP9BC,GDgBG,CQcA,CAAC,ERdG,GChBZ,EDgBQ,CChBU,EO8Bd,CAAgB,CP9BpB,CO8BI,CAAmB,KAAnB,ORdyB,GAAG,CAAC,IAAzB,0BAAN;AU4BF,AT3CD,ADgBE,AQcE,EEaH,IAAI,EAAE,CFfJ,MAEO,GEYX,GFZiB,IAAI,KAAJ,CAAU,wBAAV,CAAN;AEcT,AXfA,ASEC,EEaD,KFxBA,EEwBO,CXfH,CWeK,MAFX,AXba,GAAP,KAAe,IOvBR,KPuBP,IAA4B,GAAG,CAAC,SAApC,EAA+C;AWgB/C,AXfE,ACbF,AMVA,AEyBD,EEaC,IAAI,EAAE,AXfJ,ECbE,AMVE,CPuBD,CAAC,CCbC,CAAC,CMVG,GAAG,GPuBZ,ACbF,EUyBF,AVzBmB,AMVE,CFJX,AL2BU,GAAG,CAAC,COvBR,CAAY,CFJL,IEIrB,EPuBE;AK3BmB,AM2CrB,AXfC,ACdgB,AMTjB,EIsCA,SJtCK,CIsCK,EAAE,OJtCZ,CAAgB,KLNJ,IKMZ,GIsCa,AJtCe,GIsChB,AT5CwB,ES4ChB,AJtCa,YAAL,CAAkB,KAAlB,CAA5B;AIuCE,AT5CF,ADciB,WU8BR,AT5CJ,EAAL,CS4CY,AT5CJ,CS4CK,KT5Cb,CS4CS,CAAW,AT5CJ,MS4CP,ET5CT,GS4C+B,CAA7B;AN3CF,AM4CC,AT5CF,AF4BC,ACfiB,AMRjB,GIiCF,ONtCQ,CEKD,EPuBE,IK5BM,CL4BD,EK5BI,CEKhB,CAAgB,GPuBT,CAAa,ASER,GTFL,CAAP,COvBA,CAA0B,AEyBF,IJ9BR,CAAA,CEKhB,CAAiC,KFLjB,CAAe,EEK/B,KFLgB,CAAuB,KAAvB,CAAhB;AACA,AM4CA,AXhBD,ASGC,EEaA,MAAM,EN5CF,AM4CI,AFbF,IAAI,CJ/BV,CAFqB,CAEI,AI+BZ,IAAI,KEaR,CFbQ,CAAA,CEaT,EAAQ,IFbH,EAAb;AEcE,AVjCe,AMPjB,AE2BA,MAAA,IAAI,CF3BC,AE2BA,MF3BL,CAAY,GE2BZ,CAAgB,IAAhB,CF3BA,CAAsB,GAAtB,CAA0B,QAA1B;AFJA,AM6CE,AVjCA,AQoBF,QEaQ,GN7CH,AIgCA,GEaS,GAAI,AFblB,CAAY,EEaS,CAAC,IN7CtB,CACG,CM4Ce,CAA0B,AT7C/B,COgCb,CAAwB,CRpBJ,GUiClB,AVjCqB,AQoBK,CRpBJ,AQoBK,CJhC7B,CACc,CHDuB,IDYnC,AQoBF,EJhCA,EAEG,IAFH,CAEQ,UAAA,MAAM,EAAG,mGJUgB;AIT7B,AHFJ,ADWiC,AMPjC,AE4BD,MF5BC,KLJK,CGEG,AEEF,CLJN,AKIO,CLJC,EDWG,EITH,CAAA,EHFR,ADWiC,ECXhB,GGET,CAAQ,IHFhB,CKIA,CFFQ,AEEmB,CFFvB,AL0BgB,EK1BK,KL0BU,COxBnC,EAAsC,KAAK,UAA3C;AFDM,AM2CJ,AT7CH,AF2BoC,AOvBnC,QIyCM,CAAC,CN3CD,CEED,IFFM,AM2CT,AJzCF,CAAU,CIyCK,CN3CD,MAAR,AEEN,EAAoB,KAApB;AFDM,AM2CF,AVnCA,AMNL,aIyCY,GVnCH,CIRK,GM2CK,CAAC,AVnCN,EIRI,CAAC,CJQV,CAAU,EUmCP,CAAgB,AVnCnB,CAAc,GUmCS,EVnCvB,CAAJ,EIRS,AM2Cc,AVnCG,CIRG,AM2CI,UN3CxB,CAA+B,0BM2CjB,CAAhB,CAAP;AN1CI,AM2CL,AXnBD,AChBI,KUiCJ,KXjBM,CWoBD,CN5CC,ELwBI,GAAc,EKxBX,ALwBb,CChBU,CIRK,GJQD,IQqBL,CRrBC,EITgC,eJSb,KAAnB,6BAAN;AIPE,AM4CJ,AXpBF,AChBG,AQsBL,MEcI,AXpBF,KAAK,CKxBC,AM4CE,AXpBF,CWoBG,AFdJ,IJ9BM,AM4CT,CAAY,AFdJ,CJ9BG,ALwBb,CAAc,CK1B4B,AM8CzB,CAAC,EFdb,CAAY,GEcH,AT/CH,CS+Cc,CAAX,AXpBA,CWoBZ,IFdJ,ETNuB,ASMQ,CPjCM,CF2BX;AKvBlB,AM4CJ,AT/CJ,AF2BI,AChBD,AQsBD,WPjCG,CGGG,AI8BA,CEcG,AT/CX,CAAQ,GOiCK,GEcK,AFdF,CJ9BC,AM4CE,AT/CnB,EGGmB,AHHF,CGGI,CI8BA,GEcV,CN5CQ,CM4Cf,CT/CJ,AKIgB,AE6BA,CAAY,KF7BA,KE6B1B;AJjC0C,AMgDzC,AT/CJ,AF4BK,ACvBa,AMDjB,WFLa,AEKR,CPwBK,CKxBH,ELwBM,EK7BA,AEKb,CFAY,ALwBI,AOxBJ,KAAZ,EPwBuB,CAAC,AOxBJ,EFAR,EEAZ,CPwBgB,CAAc,EKxBZ,CLwBF,CKxBK,ALwBjB;AKvBI,AM4CP,AXpBG,ACxBa,AMAlB,AE4BG,YTJM,ASIF,GTJK,CAAC,CSID,KTJH,GAAa,CAAjB,CSIE,CTJkB,GSIC,GTJK,ESIA,ETJI,GSIC,ETJL,CAAU,ESIA,UAAL,CAAgB,ETJrB,CAAN,ESItB,EAAwD;AEH5D,AVzBmB,AQ6Bb,CEzEqC,EA2F3C,iBAAA,CAAA,OAAA,CAAQ,OAAR,EAAiB,CAAC,OAAD,EAAS,IAAT,CAAjB,CA3F2C,EA4F3C,iBAAA,CAAA,QAAA,CAAS,QAAT,EAAmB,CAAC,MAAD,CAAnB,CA5F2C,EA6F3C,iBAAA,CAAA,OAAA,CAAQ,OAAR,EAAiB,CAAC,OAAD,EAAU,IAAV,CAAjB,CA7F2C,CAAhC;AN6CD,ALmBkB,ACpBT,AQ8Bd,gBJ7BS,GLwBiB,GKxBjB,ALwBoB,CKxBpB,ALwBqB,CE5BxB,KF4BoB,CKxBjB,CAAQ,EHJI,CF4BoB,CAAhB,EKxBhB,CAAJ,ALyBA,EKzBqB;AACnB,AHJV,AF4BU,AC1BO,UD0BP,CE5BL,GF4BS,CE5Bd,CAAU,AF4BM,GAAG,CAAC,CKxBH,ALwBE,CAAX,CE5BR,EAAmB,GGIK,AEAd,CFAe,GHJzB,IGIiB,CAAgB,KAAhB,CAAP,CADmB,CACY;AAC/B,AHJX,AF2ByB,AC1BP,AMGf,AE4BA,UTLsB,COvBjB,EE4BA,ETLsB,EAAE,AOvB7B,CAAY,CE4BZ,CAAY,GF5BZ,QE4BA,CAAwB,KAAK,MAAL,CAAY,UAApC;AJ3BO,ALsBD,AC1BS,AMIlB,AE4BE,STP2B,GAEpB,CK1BA,MAGO;AACL,ALsBA,AC3BO,AQiClB,UTNW,IAAI,EAAE,GAAG,CAAC,CKtBH,ALsBE,CAAX,MKtBgB,CAAC,OAAR,EAAP;AACD,ALqBe,AC3BP,UD2BO,KAAK,EAAE,GAAG,CAAC,CAAD;AKpB3B,ALoBC,AC3BS,EC5C8B,OFgErB,EK1Bb,CAAP,IHtCyC,CAAA,gBKkD5B,WAAiB;AFE/B,ALYqB,ACpBT,AMOjB,SFfI,GLiCQ,COlBL,EFCI,CLYe,MOb1B,CADoC,CPmBxB,AOlBM,IPaQ,GSeT,OAAqB;AJ1BhC,AHrDV,AFgE8B,ACpBT,AMQlB,AE6BC,OPjFJ,CAAA,EOiFS,ETZa,ESYlB,CPjFJ,EGqDiB,ALWa,CEhE9B,MGqDwB,CAAC,ALgBH,KErEtB,AFgE8B,EKXb,CAAgB,KAAhB,CAAP;AACD,AJVY;AIWd,ALkBC,AC7Ba,AQqCjB,OJhDA,AIgDA,EJzBG,GLiBO,CKxCV,CAuBQ,GIyBH,EJzBQ,EIyBb,CTRoB,CSQX,ETRc,MKxCvB,ALwC2B,CAAC,CKhBzB,IAxBH,CAwBQ,ALgBe,CAAY,IAAZ,CAAiB,MKhB3B,ILgB2B,CAAC;AKfrC,ALeqC,ACvBxC,AQ+BW,QAAA,IJvBJ,AIuBI,CJvBH,AIuBG,ITRiC,ASQjC,CTRkC,ASQlC,CJvBC,ALekC,CKfjC,EIuBF,CTRiC,ASQjC,CF7DE,EE6DF,ETR4C,ASQ5C,CAAA,CJvBR,EAAsB,ALee,ASQ7B,IAAA;AJtBN,ALcmC,ACtB1C,AM9BC,AE4DqB,QAAA,CTRE,CKdjB,ALcF,ESQiB,CF5Dd,AE4Dc,GJtBX,CAAC,AIsBU,CF5DT,AE4DS,GJtBf,CAAU,EEtChB,AE4DqB,CAAA,GJtBf,AIsBe,EJtBG,AIsBH,CAAA,CJtBf,EIsBe,MAAA;AJrBhB,AEtCN,AE2DiC,OAAhC,EAAK,IAAI,KAAJ,IAAI,GAAA,EAAA,CAAT;AJpBG,ALaC,OKzCJ,KLyCQ,UAAJ,EAAgB;AKZrB,ALaO,ASM0B,cTNtB,UAAU,CAAC,IAAX,aAA2B,KAA3B,CAAJ,EAAsC,IAAI,CAAC,IAAD,CAAJ,GAAa,KAAb,CAAtC,KACK,MAAM,IAAI,KAAJ,iCAAmC,IAAnC,EAAN;AACN,SAHD,MAIK;AACH,ASIN,EFtFmC,MAAA,CAAA,CEsF/B,ITJQ,CSIH,UTJc,ASIvB,EAAqB,CTJK,MAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,UAAA,CAAC;AAAA,AC/EhD,AQoFM,ORpFN,CAAA,OAAA,GAAA,CD+EoD,CAAC,CAAC,KKfjD,ELe+C,CAAU,GC/E9D,ID+EoD,CAAkB,IAAlB,MAA4B,CAAC,CAAjC;AKd5C,ALc4C,AOlFhD,AEwFM,OFxFN,CAAA,GFoES,ALcqB,CAApB,ASMA,GJpBN,AEpEJ,CFoEc,CIoBC,CFxFf,AEwFgB,IJpBZ,EAAkB,CIoBZ,CJpBN,CEpEJ,GEwF4B,IAAI,CAAC,EAAvB,IAA6B,KAAK,CAAC,OAAN,KAAkB,IAAI,CAAC,IAAxD,EAA8D;AJnBjE,AIoBK,cAAM,SAAS,GAAI,KAAK,CAAC,OAAN,KAAkB,IAAI,CAAC,EAAxB,GACd,KAAK,UAAL,CAAgB,OAAhB,EADc,GAEd,KAAK,UAAL,CAAgB,WAAhB,EAFJ;ATNE,ASSF,cTTM,CSSD,UTTH,ASSF,CAAgB,CTTG,SSSnB,CAA2B,SAA3B;ATRI,ASSL,gBTTS,WAAW,CAAC,IAAZ,aAA4B,KAA5B,CAAJ,EAAuC,IAAI,CAAC,IAAD,CAAJ,GAAa,KAAb,CAAvC,KACK,MAAM,IAAI,KAAJ,iCAAmC,IAAnC,EAAN;AACN,ASQN,OARD,ITHM,ESWC,CAEN,GTTU,MAAM,IAAI,KAAJ,CAAU,eAAV,CAAN;AACN,ASSN,EJ7FqC,cAAA,CAAA;ALqFjC,OAtBD;AK/DN,ALsFM,OKtFN,CAAA,KLsFa,EKtFb,ELsFM,CKtFN,UAAA;ALuFG,gCSQmB,OAAa;AAC/B,UAAI,KAAK,YAAY,UAArB,EAAiC;AAC/B,YAAI,KAAK,UAAT,EAAqB,KAAK,UAAL,CAAgB,KAAhB;AACtB,wBTTa;AACd,ASSD,aTTQ,KAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB,CAAP;AACD;;;wBACiB;AAChB,aAAO,KAAK,QAAL,CAAc,KAAd,CAAoB,CAApB,CAAP;AACD,AS1FH,OAAA,CAAA,OAAA,GAAA,QAAA;;;;;;ATPA,OAAA,CAAA,OAAA,GAAA,OAAA","file":"main.c39d6dcf.js","sourceRoot":"..\\src","sourcesContent":["type eventHandler = (args: any) => void;\r\n\r\nexport default abstract class EventEmitter {\r\n\r\n  private _map = new Map<string, Array<eventHandler> >();\r\n\r\n  public on(eventName: string, handler: eventHandler) : void {\r\n\r\n    const arrayOfHandlers = this._map.get(eventName);\r\n\r\n    if (arrayOfHandlers) {\r\n      arrayOfHandlers.push(handler);\r\n    } else {\r\n      const newArray = [ handler ];\r\n      this._map.set(eventName, newArray);\r\n    }\r\n  }\r\n\r\n  public off(eventName: string, handler: eventHandler) : void {\r\n\r\n    const arrayOfHandlers = this._map.get(eventName);\r\n    if (!arrayOfHandlers) return;\r\n\r\n    const index = arrayOfHandlers.indexOf(handler);\r\n    if (index === -1) return;\r\n\r\n    arrayOfHandlers.splice(index, 1);\r\n    if (arrayOfHandlers.length === 0) {\r\n      this._map.delete(eventName);\r\n    }\r\n  }\r\n\r\n  public emit(eventName: string, args: any): void {\r\n\r\n    const arrayOfHandlers = this._map.get(eventName);\r\n\r\n    if (!arrayOfHandlers || arrayOfHandlers.length === 0) return;\r\n    \r\n    arrayOfHandlers.forEach(handler => {\r\n      setTimeout(() => {\r\n        handler(args);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n}","import BaseIOEntity from './BaseIOEntity';\r\nimport { Flag, Action, Validation, CommandDefinition, FlagsHash } from './types';\r\n\r\nexport default class Command {\r\n\r\n  public readonly text: string;\r\n  public readonly info: string;\r\n\r\n  private readonly _aliases: string[];\r\n  private readonly _flags: Flag[] = [];\r\n  private readonly _action: Action;\r\n  private readonly _validation: Validation;\r\n  private _caller: BaseIOEntity;\r\n\r\n  constructor(def: CommandDefinition, caller: BaseIOEntity) {\r\n    this.text = def.text;\r\n    this._action = def.action;\r\n    this._validation = def.validation;\r\n    this._caller = caller;\r\n\r\n    this.info = (def.info) ? def.info : 'No info for this command';\r\n    \r\n    if (def.aliases) {\r\n      this._aliases = (typeof def.aliases === 'string') ? [def.aliases] : def.aliases;\r\n    } else {\r\n      this._aliases = [];\r\n    }\r\n    \r\n    if (def.flags) {\r\n      def.flags.forEach(f => {\r\n        if (typeof f === 'string') {\r\n          this._flags.push({ name: f, info: 'No info for this flag', aliases: [], type: 'boolean' })\r\n        } else {\r\n          this._flags.push(f);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  exec(params: string[], flags: string[]) : Promise<Error | void> {\r\n    // Checking flags correctness\r\n    let resolvedFlags: FlagsHash;\r\n    try {\r\n      resolvedFlags = this._resolveFlags(flags);\r\n    } catch (err) {\r\n      return Promise.resolve(err);\r\n    }\r\n    // Validating parameters\r\n    const ctx = {\r\n      params,\r\n      flags: resolvedFlags,\r\n      caller: this._caller,\r\n      processed: undefined\r\n    }\r\n    const val = this._validation(ctx);\r\n    const result = (typeof val === 'boolean') ? val : val.result;\r\n    if (!result) {\r\n      const error = (typeof val === 'boolean') ? new Error('Invalid parameters!') : val.error;\r\n      return Promise.resolve(error);\r\n    }\r\n    \r\n    if (typeof val !== 'boolean' && val.processed) {\r\n      ctx.processed = val.processed;\r\n    }\r\n    return this._action(ctx);\r\n  }\r\n\r\n  private _resolveFlags(flags: string[]) : FlagsHash {\r\n      const hash: FlagsHash = {};\r\n      flags.forEach(rawFlag => {\r\n        debugger;\r\n\r\n        const arr = rawFlag.split('=');\r\n        if (arr.length > 2) throw new Error('Invalid flag!');\r\n        const { flag, value } = (arr.length === 1)\r\n          ? { flag: arr[0], value: true }\r\n          : { flag: arr[0], value: arr[1] };\r\n\r\n        const findByName = this._flags.find(f => f.name === flag);\r\n        if (findByName) {\r\n          if (findByName.type === typeof value) hash[flag] = value;\r\n          else throw new Error(`Invalid value for flag${flag}`);\r\n        }\r\n        else {\r\n          const findByAlias = this._flags.find(f => f.aliases.indexOf(flag) !== -1);\r\n          if (findByAlias) {\r\n            if (findByAlias.type === typeof value) hash[flag] = value;\r\n            else throw new Error(`Invalid value for flag${flag}`);\r\n          }\r\n          else throw new Error('Invalid flag!');\r\n        }\r\n      });\r\n      return hash;\r\n  }\r\n\r\n  public get flags() : Flag[] {\r\n    return this._flags.slice(0);\r\n  }\r\n  public get aliases() : string[] {\r\n    return this._aliases.slice(0);\r\n  }\r\n}","import Command from './Command';\r\nimport CommandTrigger from './CommandTrigger';\r\nimport BaseIOEntity from './BaseIOEntity';\r\nimport { CommandInfo, CommandDefinition } from './types';\r\n\r\nexport default class CommandManager {\r\n\r\n  private _map = new Map<string, Command>();\r\n\r\n  public getInfo(commandName: string) : CommandInfo | undefined {\r\n      \r\n    const cmd = this._map.get(commandName);\r\n    return (cmd)\r\n      ? {\r\n        name: cmd.text,\r\n        aliases: cmd.aliases,\r\n        info: cmd.info,\r\n        flags: cmd.flags\r\n      }\r\n      : undefined;\r\n  }\r\n\r\n  public getCommandsList() : string[] {\r\n    return Array\r\n      .from(this._map.values())\r\n      .filter((value, index, self) => self.indexOf(value) === index)\r\n      .map(command => command.text);\r\n  }\r\n\r\n  public register(definitions: CommandDefinition[], terminal: BaseIOEntity) {\r\n    definitions.forEach(def => {\r\n      this.checkDef(def);\r\n      const cmd = new Command(def, terminal);\r\n      this._map.set(cmd.text, cmd);\r\n      cmd.aliases.forEach(alias => this._map.set(alias, cmd));\r\n    })\r\n  }\r\n\r\n  tryExecute(trigger: CommandTrigger) : Promise<Error | void> {\r\n    const cmd = this._map.get(trigger.command);\r\n    return (cmd !== undefined)\r\n      ? cmd.exec(trigger.arguments, trigger.flags)\r\n      : Promise.resolve(new Error('Command not found'));\r\n  }\r\n\r\n  private checkDef(def: CommandDefinition) : void {\r\n    if (this._map.has(def.text)) {\r\n      throw new Error(`Command ${def.text} already registered!`);\r\n    }\r\n    if (def.aliases) {\r\n      for (let alias of def.aliases) {\r\n        if (this._map.has(alias)) {\r\n          throw new Error(`Alias ${alias} is already registered!`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import EventEmitter from '../EventEmitter';\r\nimport CommandManager from './CommandManager';\r\nimport { CommandInfo, CommandDefinition, BaseIOCallback } from './types';\r\nimport CommandTrigger from './CommandTrigger';\r\n\r\nexport default abstract class BaseIOEntity extends EventEmitter {\r\n\r\n  public abstract in(input: string) : void;\r\n\r\n  protected commandManager = new CommandManager();\r\n  protected _stopToken = false;\r\n\r\n  constructor(commands: CommandDefinition[]) {\r\n    super();\r\n    this.commandManager.register(commands, this);\r\n    this.in = this.in.bind(this);\r\n  }\r\n\r\n  public getInfo(command: string) : CommandInfo | undefined {\r\n    return this.commandManager.getInfo(command);\r\n  }\r\n  public getAllCommandsInfo() : Array<CommandInfo | undefined> {\r\n    const list = this.commandManager.getCommandsList();\r\n    return list.map(name => this.commandManager.getInfo(name));\r\n  }\r\n  public executeCommand(trigger: CommandTrigger) {\r\n    // Надо переименовать класс CommandTrigger во что-то другое..\r\n    return this.commandManager.tryExecute(trigger)\r\n  }\r\n\r\n  public stop(): void {\r\n    this._stopToken = true;\r\n  }\r\n\r\n  public onread(callback: BaseIOCallback) : void {\r\n    this.on('read', callback);\r\n  }\r\n\r\n  public onwrite(callback: BaseIOCallback) : void {\r\n    this.on('write', callback);\r\n  }\r\n\r\n  public onclear(callback: BaseIOCallback) : void {\r\n    this.on('clear', callback);\r\n  }\r\n\r\n  public out(message: string): void {\r\n    this.emit('write', message);\r\n  }\r\n}","export default class CommandTrigger {\r\n\r\n  public command: string = '';\r\n  public arguments: string[] = [];\r\n  public flags: string[] = [];\r\n\r\n  public static getFrom(source: string) : CommandTrigger {\r\n    const trigger = new CommandTrigger();\r\n    const arr = source.trim().split(' ');\r\n    trigger.command = arr[0];\r\n    arr.splice(0, 1);\r\n    trigger.flags = CommandTrigger.refineFlags(arr.filter(item => CommandTrigger.isFlag(item)));\r\n    trigger.arguments = arr.filter(item => !CommandTrigger.isFlag(item));\r\n\r\n    return trigger;\r\n  }\r\n\r\n  private static isFlag(value: string) : boolean {\r\n    return /^\\-{1,2}/.test(value);\r\n  }\r\n  \r\n  private static refineFlags(flags: string[]) : string[] {\r\n    let result: string[] = [];\r\n    flags.forEach(f => {\r\n      const temp = f.substr(1); // Удаляем первый слэш\r\n      if (temp.substr(0, 1) === '-') result.push(temp.substr(1));\r\n      else result = result.concat(temp.split(''));\r\n    })\r\n    return result;\r\n  }\r\n\r\n}","export function bind(owner: any, toBind: Function | Function[]): void {\r\n  if (!(toBind instanceof Array)) toBind = [ toBind ];\r\n  toBind.forEach(method => {\r\n    owner[method.name] = method.bind(owner);\r\n  })\r\n}\r\n\r\nexport function isError(obj: any) {\r\n  return obj instanceof Error;\r\n}","import BaseIOEntity from \"../../lib/base/BaseIOEntity\";\r\nimport { CommandDefinition } from \"../../lib/base/types\";\r\nimport CommandTrigger from \"../../lib/base/CommandTrigger\";\r\nimport { isError } from \"../../lib/util\";\r\n\r\n\r\nexport default class ChatClient extends BaseIOEntity { // По идее BaseIOEnity должен быть интерфейсом, конечно\r\n  \r\n  private _socket: WebSocket | undefined;\r\n  public readonly url: string;\r\n\r\n  public get socket(): WebSocket | undefined {\r\n    return this._socket;\r\n  }\r\n  public connect(socket: WebSocket): void {\r\n    this._socket = socket;\r\n  }\r\n  public disconnect(): void {\r\n    this._socket = undefined;\r\n  }\r\n\r\n  constructor(commands: CommandDefinition[], url: string) {\r\n    super(commands);\r\n    this.url = url;\r\n    this.in = this.in.bind(this);\r\n    this.reportErrors = this.reportErrors.bind(this);\r\n  }\r\n\r\n  private reportErrors(output: any) : Promise<any> {\r\n    if (isError(output)) {\r\n      this.emit('write', output.message);\r\n    }\r\n    return Promise.resolve(output);\r\n  }\r\n\r\n  public in(input: string): void {\r\n    const trigger = CommandTrigger.getFrom(input);\r\n    let error: Error | void; // Не знаю, как сделать по-другому. Надо разбираться\r\n    this.commandManager\r\n      .tryExecute(trigger)\r\n      .then(output => {\r\n        if (isError(output)) {\r\n          error = output;\r\n          return this.commandManager.tryExecute({\r\n            command: '@message',\r\n            flags: [],\r\n            arguments: [ input ]\r\n          })\r\n          .then(output => {\r\n            debugger;\r\n            if (isError(output)) {\r\n              return Promise.resolve(error); // Это важно! Причина по которой не получилось отправить сообщение\r\n              // Может быть только одна - соединение закрыто, а значит нужно отобразить ошибку КОМАНДЫ!\r\n            } else {\r\n              return Promise.resolve();\r\n            }\r\n          })\r\n        } else {\r\n          return Promise.resolve(error);\r\n        }\r\n      })\r\n      .then(this.reportErrors)\r\n      .then(() => {\r\n        if (!this._stopToken) {\r\n          this.emit('read', {});\r\n        }\r\n      });\r\n  }\r\n\r\n  run() : void {\r\n    this.emit('read', {});\r\n  }\r\n}","import EventEmitter from '../lib/EventEmitter';\r\n\r\nexport default class Line extends EventEmitter {\r\n\r\n  protected _element : HTMLDivElement;\r\n  protected _textField: HTMLDivElement;\r\n\r\n  constructor() {\r\n    super();\r\n    this._element = document.createElement('div');\r\n    this._element.classList.add('line');\r\n    this._textField = document.createElement('div');\r\n    this._textField.classList.add('line-content');\r\n    this._element.appendChild(this._textField);\r\n  }\r\n\r\n  public setContent(html: string) {\r\n    this._textField.innerHTML = html;\r\n  }\r\n  public get element() {\r\n    return this._element;\r\n  }\r\n}","import Line from './Line';\r\n\r\nexport default class InputLine extends Line {\r\n\r\n  private _input: HTMLInputElement;\r\n  public invitation: string = '>';\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    const $invitation = document.createElement('div');\r\n    $invitation.textContent = this.invitation;\r\n    this._element.insertBefore($invitation, this._textField);\r\n\r\n    const $input = document.createElement('input');\r\n    $input.type = 'text';\r\n    this._element.insertBefore($input, this._textField);\r\n    this._input = $input;\r\n\r\n    this._textField.classList.add('hidden');\r\n\r\n    this.handleKeys = this.handleKeys.bind(this);\r\n    window.addEventListener('keydown', this.handleKeys);\r\n  }\r\n\r\n  public get input() : HTMLInputElement {\r\n    return this._input;\r\n  }\r\n\r\n  private handleKeys(event : KeyboardEvent) {\r\n\r\n    enum Keys { ENTER = 13 };\r\n\r\n    if (event.keyCode === Keys.ENTER && this._input === document.activeElement) {\r\n      this.commit();\r\n    }\r\n  }\r\n\r\n  public commit() {\r\n    const value = this._input.value;\r\n    this._textField.innerHTML = this.decorateText(value);\r\n    this._textField.classList.remove('hidden');\r\n    this._input.classList.add('hidden');\r\n    window.removeEventListener('keydown', this.handleKeys);\r\n    this.emit('commit', value);\r\n  }\r\n\r\n  public setContent(html: string) {\r\n    this._input.value = html;\r\n  }\r\n\r\n  public focus() : void {\r\n      this._input.focus();\r\n  }\r\n\r\n  private decorateText(sourceStr: string): string {\r\n    return sourceStr; // Пока так.\r\n  }\r\n}","export default class InputSaver {\r\n\r\n  private _store: string[] = [];\r\n  private _cursor: number = -1;\r\n  private _limit: number = 10;\r\n\r\n  public push(input: string) : void {\r\n    this._store.unshift(input);\r\n    \r\n    if (this._store.length >= this._limit) {\r\n      this._store.pop();\r\n    }\r\n    this._cursor = -1;\r\n  }\r\n\r\n  public getAll() {\r\n    return this._store.slice(0);\r\n  }\r\n\r\n  public getNext() {\r\n    if (this._store.length === 0) {\r\n      return '';\r\n    }\r\n    else {\r\n      return (this._cursor < this._store.length - 1)\r\n        ? this._store[++this._cursor]\r\n        : this._store[this._cursor];\r\n    }\r\n  }\r\n\r\n  public getPrevious() {\r\n    if (this._cursor === 0) {\r\n      this._cursor = -1;\r\n      return '';\r\n    } else {\r\n      return (this._cursor > - 1)\r\n        ? this._store[--this._cursor]\r\n        : '';\r\n    }\r\n  }\r\n\r\n  public setLimit(limit: number) {\r\n    this._limit = limit;\r\n    if (this._store.length > limit) {\r\n      this._store.splice(this._store.length, limit - this._store.length);\r\n    }\r\n    this._cursor = -1;\r\n  }\r\n}","import Line from './Line';\r\nimport InputLine from './InputLine';\r\nimport InputSaver from '../lib/InputSaver';\r\nimport BaseIOEntity from '../lib/base/BaseIOEntity'\r\nimport { bind } from '../lib/util';\r\n\r\n// class BaseTerminal {\r\n  \r\n// }\r\n\r\nexport default class Terminal {\r\n\r\n  private screen: Element;\r\n  private activeLine ?: InputLine;\r\n  private InputSaver = new InputSaver();\r\n  private attachedTo ?: BaseIOEntity;\r\n\r\n  constructor(screenSelector: string) {\r\n    const screen = document.querySelector(screenSelector);\r\n    if (screen !== null) this.screen = screen;\r\n    else throw new Error('invalid selector for console screen');\r\n\r\n    this.screen.addEventListener('click', this.handleClick.bind(this));\r\n    window.addEventListener('keydown', this.handleKeys.bind(this));\r\n\r\n    bind(this, [ this.read, this.write, this.clear ])\r\n  }\r\n\r\n  public attachTo(obj: BaseIOEntity) : void {\r\n    if (this.attachedTo) this.deattach();\r\n    obj.onread(this.read);\r\n    obj.onwrite(this.write);\r\n    obj.onclear(this.clear);\r\n    this.attachedTo = obj;\r\n  }\r\n\r\n  public deattach() : void{\r\n    if (this.attachedTo) {\r\n      this.attachedTo.off('read', this.read);\r\n      this.attachedTo.off('write', this.write);\r\n      this.attachedTo.off('clear', this.clear);\r\n      this.attachedTo = undefined;\r\n    }\r\n  }\r\n\r\n  private read() : void {\r\n\r\n    const line = new InputLine();\r\n    this.screen.appendChild(line.element);\r\n    this.activeLine = line;\r\n    this.activeLine.focus();\r\n\r\n    new Promise<string>((resolve) => {\r\n      line.on('commit', resolve);\r\n    })\r\n    .then(input => {\r\n      this.InputSaver.push(input);\r\n      return Promise.resolve(input);\r\n    })\r\n    .then(input => {\r\n      if (this.attachedTo) {\r\n        this.attachedTo.in(input);\r\n      } else throw new Error('No IO entity attached!');\r\n    });\r\n  }\r\n  \r\n  private write(html: string) : void {\r\n\r\n    const line = new Line();\r\n    line.setContent(html);\r\n    this.screen.appendChild(line.element);\r\n  }\r\n\r\n  private clear() : void {\r\n\r\n    while (this.screen.firstChild) {\r\n      const child = this.screen.firstChild;\r\n      if (this.activeLine && child === this.activeLine.input) {\r\n        break;\r\n      }\r\n      this.screen.removeChild(this.screen.firstChild);\r\n    }\r\n  }\r\n\r\n  private handleKeys(event : KeyboardEvent) : void {\r\n\r\n    enum Keys { UP = 38, DOWN = 40 };\r\n\r\n    if (this.activeLine) {\r\n      // Input specific actions\r\n      if (event.keyCode === Keys.UP || event.keyCode === Keys.DOWN) {\r\n        const toDisplay = (event.keyCode === Keys.UP)\r\n          ? this.InputSaver.getNext()\r\n          : this.InputSaver.getPrevious();\r\n        this.activeLine.setContent(toDisplay);\r\n      }\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  private handleClick(event : Event) : void {\r\n    if (event instanceof MouseEvent) {\r\n      if (this.activeLine) this.activeLine.focus();\r\n    }\r\n  }\r\n}","import { CommandDefinition } from \"./types\";\r\n\r\nexport function infoCmd(name: string, aliases ?: string[] | string) : CommandDefinition {\r\n  return {\r\n    text: name,\r\n    info: 'Shows info about all avaliable commands of a particual command if specified',\r\n    aliases,\r\n    validation: (ctx) => {\r\n      if (ctx.params.length === 0) return {\r\n        result: true,\r\n        processed: ctx.caller.getAllCommandsInfo()\r\n      }\r\n      if (ctx.params.length === 1) return {\r\n        result: true,\r\n        processed: ctx.caller.getInfo(ctx.params[0])\r\n      }\r\n      return false;\r\n    },\r\n    action: (ctx) => {\r\n      if (ctx.processed === undefined) {\r\n        ctx.caller.out(`Command ${ctx.params[0]} not found`);\r\n      } else if (ctx.processed instanceof Array) {\r\n        ctx.processed.forEach(info => {\r\n          ctx.caller.out(`${info.name} : ${info.info}`);\r\n        })\r\n      } else {\r\n        ctx.caller.out(`${ctx.processed.name} : ${ctx.processed.info }`);\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n}\r\nexport function clearCmd(name: string, aliases ?: string[] | string) : CommandDefinition {\r\n  return {\r\n    text: name,\r\n    aliases,\r\n    info: 'Clears terminal screen',\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 0;\r\n    },\r\n    action: (ctx) => {\r\n      ctx.caller.emit('clear', {});\r\n      return Promise.resolve();\r\n    },\r\n\r\n  }\r\n}\r\nexport function exitCmd(name: string, aliases ?: string[] | string) : CommandDefinition {\r\n  return {\r\n    text: name,\r\n    aliases,\r\n    info: 'Shuts down terminal',\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 0;\r\n    },\r\n    action: (ctx) => {\r\n      ctx.caller.stop();\r\n      return Promise.resolve();\r\n    }\r\n  }\r\n}","import { CommandDefinition } from '../../lib/base/types';\r\nimport ChatClient from '../chat/ChatClient';\r\nimport { infoCmd, clearCmd, exitCmd } from '../../lib/base/defaultCommands';\r\nimport CommandTrigger from '../../lib/base/CommandTrigger';\r\n\r\nexport const commands: CommandDefinition[] = [\r\n  {\r\n    text: '@status',\r\n    aliases: '@st',\r\n    info: 'Shows connection status',\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 0;\r\n    },\r\n    action: (ctx) => {\r\n      const socket = (ctx.caller as ChatClient).socket;\r\n      const status = (socket) ? 'CONNECTED' : 'DISCONNECTED';\r\n      ctx.caller.out(`Your are currently <b>${status}</b>`)\r\n      return Promise.resolve();\r\n    },\r\n  },\r\n\r\n  {\r\n    text: '@connect',\r\n    aliases: '@con',\r\n    info: 'Connects to default server',\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 0;\r\n    },\r\n    action: (ctx) => {\r\n      const socket = (ctx.caller as ChatClient).socket;\r\n      if (socket) {\r\n        ctx.caller.out('Your are already connected');\r\n        return Promise.resolve();\r\n      } \r\n      else {\r\n        const client = ctx.caller as ChatClient;\r\n        const ws = new WebSocket(client.url);\r\n        ctx.caller.out('Connecting...')\r\n        return new Promise(resolve => {\r\n          ws.onopen = () => {\r\n            client.connect(ws);\r\n            ctx.caller.executeCommand(CommandTrigger.getFrom('@clear'));\r\n            ctx.caller.out('Connection successful!');\r\n            resolve();\r\n          }\r\n          ws.onclose = () => {\r\n            ctx.caller.out('Disconnected.');\r\n          }\r\n          ws.onmessage = event => {\r\n            ctx.caller.out(event.data);\r\n          }\r\n        });\r\n\r\n      }\r\n    },\r\n  },\r\n  \r\n  {\r\n    text: '@disconnect',\r\n    aliases: '@dis',\r\n    info: 'Disconnects from current server',\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 0;\r\n    },\r\n    action: (ctx) => {\r\n      const socket = (ctx.caller as ChatClient).socket;\r\n      if (!socket) ctx.caller.out('Your are not connected to any server');\r\n      else {\r\n        socket.close(0, 'disconnection command');\r\n      }\r\n      return Promise.resolve();\r\n    },\r\n  },\r\n\r\n  {\r\n    text: '@message',\r\n    aliases: '@msg',\r\n    info: 'Sends message',\r\n    validation: (ctx) => {\r\n      return ctx.params.length === 1;\r\n    },\r\n    action: (ctx) => {\r\n      debugger;\r\n      const socket = (ctx.caller as ChatClient).socket;\r\n\r\n      if (!socket) {\r\n        return Promise.resolve(new Error('You are not connected to any server'));\r\n      }\r\n      else {\r\n        socket.send(ctx.params[0]);\r\n        return Promise.resolve();\r\n      }\r\n      \r\n    },\r\n  },\r\n\r\n  infoCmd('@info', ['@help','@?']),\r\n  clearCmd('@clear', ['@cls']),\r\n  exitCmd('@exit', ['@quit', '@q'])\r\n\r\n]\r\n","// import './main.scss';\r\n// import CommandShell from './ts/apps/shell/CommandShell';\r\n// import Terminal from './ts/views/Terminal';\r\n// import { commands } from './ts/apps/shell/commands';\r\n\r\n// const view = new Terminal('.screen');\r\n// const shell = new CommandShell(commands);\r\n\r\n// view.attachTo(shell);\r\n// shell.run();\r\n\r\nimport './main.scss';\r\nimport ChatClient from './ts/apps/chat/ChatClient';\r\nimport Terminal from './ts/views/Terminal';\r\nimport { commands } from './ts/apps/chat/commands';\r\n\r\nconst view = new Terminal('.screen');\r\nconst chat = new ChatClient(commands, 'ws://localhost:1200');\r\n\r\nview.attachTo(chat);\r\nchat.run();\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}